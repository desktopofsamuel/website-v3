<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Samuel Wong — Hong Kong UI/UX Designer | Desktop of Samuel]]></title>
        <description><![CDATA[I'm Samuel, I'm a Hong Kong based UI/UX Designer. User Interface Design, User Experience Design, Product Design, Design Thinking, Product Development, Brand Design - A personal design portfolio, also journal for designers' side-projects.]]></description>
        <link>https://desktopofsamuel.com</link>
        <generator>RSS for Node</generator>
        <lastBuildDate>Sat, 14 Jan 2023 08:25:20 GMT</lastBuildDate>
        <atom:link href="https://desktopofsamuel.com/rss.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Invalid Date</pubDate>
        <copyright><![CDATA[© 版權所有]]></copyright>
        <language><![CDATA[en]]></language>
        <managingEditor><![CDATA[Samuel W.]]></managingEditor>
        <webMaster><![CDATA[Samuel W.]]></webMaster>
        <ttl>60</ttl>
        <item>
            <title><![CDATA[PUGZ]]></title>
            <description><![CDATA[
![](/static/pugz-1.jpg)

Funded on Kickstarter on 2015, PUGZ is a small & beautifully crafted earbuds that will perfectly connect to the world without 3.5mm port. (iPhone 7 was announced in 2016 Sep, FYI). It feels like a wire headphones, so light and accessible, except Bluetooth & batteries are packed in already.

There’s also a magnetic charging interface that company named “Squircle”, which can connected to a Micro-USB port / USB port through an adapter (Lightning Adapter was also the plan, but they failed to gain the MFi verification if you know what i meant, Airpods). 

![](/static/pugz-2.jpg)

But the best thing about the headphone is you can choose between in-ear leaking or in-ear sealed model, which I think the market has been dominated by the latter one. Battery won’t last long, and it drains if you forgot to turn it off after use, but it lasts a day’s commute, that’s all.   

Free Shipping Now for USD $169 [https://www.pugz.com/world/pugz.html](https://www.pugz.com/world/pugz.html)]]></description>
            <link>https://desktopofsamuel.com/pugz</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/pugz</guid>
            <pubDate>Sat, 03 Jun 2017 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[A Brief Guide to Setting up Mac … (again)]]></title>
            <description><![CDATA[
Buying a new mac is one of the most exciting things I enjoy. The experience is sacred, since owning a new Mac is far less frequent than switching new phones (not that I switch new iPhone every year). The box-opening is a total satisfaction, a box is slowing sliding down from the cover with friction, and then you see the iconic logo at the center of the beautifully crafted art piece. Seeing the screen lit up for the first time, you almost forget how many junk files you have in your old mac and it has given you a clean slate. *A new chance to start over.*

I was given two choices.

I can either effortlessly copy everything from the old Mac using Time Machine Backup or set it up as a new Mac. Of course, Time Machine backup guarantees everything will be the same, but old files remain after years of upgrading OS and unused apps.
  
I picked the latter one.

## Set up as a new mac, Always.

Here’s why:

1. All my working files are stored on either Google Drive or Dropbox. If you are not, you should. It’s 2017. Getting all files and folders sync up shouldn’t be a problem.
2. It’s almost time to clean up my Applications & Library folder. This should become a ritual to keep all the good apps and getting rid of the bad ones. Also, the process of typical deleting an app, by throwing the icon into the trash will not clear all its associated files. Library, the one hidden folder (Press Alt when you select Go on the Menu Bar in Finder) that you wouldn’t dare to touch, is also growing bigger after tons of installations all over App Store and the web.
3. Taking a closer look at apps that I use every day (Sketch, Quip, Illustrator, Evernote, Todoist, Franz and etc. ) Most of them are either web service based or include export functions for their settings, plugins, templates. Not much effort should I spent on settling down for these apps.

Yet, the biggest challenge in setting up a new mac is still getting the same configurations & settings. iCloud might have sync your calendar, contacts, Safari bookmarks and even your passwords across all Apple’s device. You will still need to perform OS-based settings, install third-party apps and reset their settings all over again. And you should consider this clearly before making the decision.

I made a step-by-step guide just for that purpose:

## 1. Re-configuring Keyboard Shortcuts

Most preference panel settings are not transferable, so I just have to set it up again. Typically, I switch Spotlight (Command + Space) and *Switch Input Method* (Alt + Space), because I switch input method more frequent than spotlight.

I’m also heavily addicted to *Show Desktop* (Command + F3), by dragging screenshots or files from desktop to various windows. The missing F3 key has been replaced by “3” key on my Touch Bar Macbook Pro.

Three-finger Drag weirdly has relegated to *Accessibility* page since OS X Sierra. You will need select *Mouse & Trackpad*, and select *Trackpad Options*, in order to enable the Three-finger Drag.

![Weirdly “Three Finger Drag” is a bit laggy on the new Macbook Pro](/static/mac-setup-01.png)

## 2. Reinstalling All Applications

Download back all necessary apps from App Store should be easy. Try to recover those you need in daily operation first, but not everything in your purchase record. Next, I download all apps that I’m actively subscribing. Then the third type is those license-code activated apps. I looked over your old email threads and track down license codes. Some of them might have active device limitation, so you might want to unlink from the original Mac as well.

![I also tidy up Launchpad since pinching is way easier to type an App’s name in Spotlight (Keep in one page)](/static/mac-setup-02.png)

## 3. Restoring Files and Folder
I use Dropbox and Google Drive to sync all my working files. So it just takes few minutes to set up and some time to download everything back.

## 4. Taking Control of Menu Bar & Dock Bar
Next thing is getting the menu bar and dock bar in place. Few of my favorites are Hazel, [Day-0](https://www.macupdate.com/app/mac/43284/day-o), Divvy and [KeepingYouAwake](https://github.com/newmarcel/KeepingYouAwake). Press Command to re-order the menu bar apps position. I hide those apps icon on the menu bar that should have run in the background because menu bar space is too valuable.

Next up, Dock Bar. [Niklas Goeke](https://betterhumans.coach.me/@ngoeke?source=post_header_lockup) wrote an article recently about [Focused Work](https://betterhumans.coach.me/how-to-set-up-your-mac-for-focused-work-ab3565750059) on Mac by eliminating most apps on Dock Bar.

>
A dock serves to load, unload and repair ships. Ships in the dock are there for a reason, they don’t just idle and wait for their next voyage.
>

Therefore, I try to think of the way I would trigger the app to open. If it was opened by Finder in your project folders or Download folders.(Say some Photoshop file or Illustrator file). Then you actually wouldn’t need to keep it in the Dock.

## 5. Keep your Desktop & Download folder clean
Your desktop and download folder has given a second chance, I tried my best to keep it clean and tidy. Most things end up in two folders, as I discovered are either screenshots and some temporary files. With the support of custom or even nest rules, I find Hazel, created by Noodlesoft, is an excellent file processing tool to automate your workflow.

Two rules that I relied on every day :

1. Daily Cleaning up Screenshots 
I use Mac’s default screenshot tools every day, saving them on the desktop is very handy. But they should put in a folder after a day.

![Daily Clean Up Screenshots Rule for Hazel](/static/mac-setup-03.png)

2. Daily Categorizing Download files
Most people’s Download folder is a mess, it won’t happen if you use Hazel to categorize your downloaded files. I create multiple rules according to file type (pictures, videos, disk images etc). And I usually would add an exclusion rule for files that were downloaded within today so I can still locate them right after

![Daily Categorizing Download Files](/static/mac-setup-04.png)

## 6. One More Thing, Backup
If you haven’t recovered your Mac from Time Machine backup, you’ll need to set up the Time Machine backup again. Apple has made the process so easy, you should instantly grab an external hard disk to perform a backup. Time Machine backup are safety precautions, even your new Mac probably won’t have any hardware failure any time soon.

![Screenshot of Time Machine](/static/mac-setup-05.png)

To wrap up, treasure the time you have start off fresh with your new Mac. If you have more hacks to share with me, please feel free to let me know. 

]]></description>
            <link>https://desktopofsamuel.com/a-brief-guide-to-setting-up-mac-again</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/a-brief-guide-to-setting-up-mac-again</guid>
            <pubDate>Sat, 21 Oct 2017 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Design with Data — Why should you design with real content?]]></title>
            <description><![CDATA[
We have a lot of assumptions in the process of creating wireframes and mockups for websites & apps. As wireframes & mock-ups are not dynamic, it is easy to aware various scenarios when dummy content or placeholders are used.

In contrast to graphic design or typesetting, which you build on certain materials delivered by the client. Website & app is on the other side of the track, it’s like working on a blank canvas at the beginning. Stakeholders like clients & users have some rough ideas but there is still space that requires our imagination and instinct to predict how people would use them.

A lot of tools that help designers to generate filler text easily to imitate a real product. Lorem Ipsum (originated from a sadistic quote in Latin) has become the synonym of dummy text. Tools like [Little Lorem](https://itunes.apple.com/us/app/littleipsum/id405772121?mt=12) enable quick access to different lengths of text, either by sentence, by line, or by paragraph. But when lorem ipsum is everywhere, it is not a good sign for a sophisticated design. What it really means is you need be more thorough of your design or you will need to revise it after all. I recognized placing them in my design files is actually a lazy step back, and the lesson I learned is to use real data & content as soon as possible.

Here are the reasons why:

## Misinformed Design Delays Process

Unless intentional, filler text usually delays my design process. Once lorem is placed, I can hardly get rid of it, especially when I was designing an app with content management system (CMS) or user-generated content. The idea of mock-up text will be replaced by anything, encouraged my mind to do nothing about it.

But for the exact same reason, users could also do nothing or confused about it, without context knowing what should they fill in. It would also become developers’ trouble when the draft has been developed. It would take more time and effort to adjust. What if the lorem is not text-only? Or the design incorporated personas photo that most user does not feel like to upload? Getting ahead start to collect actual copy or real sets of data would save you tons of time in the development process.

## One Step Ahead To Stop Design Flaws

Using dummy text could also result in design flaws in terms of visual design. I would definitely redesign if article headlines are too long on a blog page, as they affect how the page looks like on a photo background. Button text is also tricky, the space you need placing a “View More” button is not the same as “Read Blog Title”. Using real data would provide a more accurate estimate of the information I am dealing with, resulting in a more informed decision.

## Design With Real Data is Designing Reality

What makes mock-up real is not how refined a box shadow is created, but context. How every single detail falls into the right place, that’s how a mock-up straightly takes you in the context. However, working in a web agency that handles clients’ design and feature request every day. Getting information from stakeholders or clients is not an easy task. Most clients come with a business plan or sketchy idea, do not realize the importance of getting the real data.

Depending on the scope of work of the project, the step of researching actual data could be an extra effort to the design process, or even it should before design process begin. As [Josh Puckett](https://medium.com/bridge-collection/modern-design-tools-using-real-data-62d499e97482) stated, “ (Designers) allow data to inform and constrain their work. Their decisions are wholly informed; implementation details carefully considered; edge cases solved. They build empathy for how their users will actually experience things in a variety of contexts.”

Trying to obtain data is also one step toward practicality. Realistic data that you can obtain eventually will be the data shown on screen. Those you cannot obtain will remain in the fancy template. I worked on an app that showcases tourist destinations, the “editorial” introduction that filled with lorem ipsum has eventually become excerpts from Wikipedia, which have removed after all. With Sketch quick-and-easy plugin (Try [Content Generator](https://github.com/timuric/Content-generator-sketch-plugin) or [Invision’s Craft](https://www.invisionapp.com/craft), inputting dynamic data is easier than ever. Craft even support JSON so any dataset can be imported into the design within clicks.

If you are working on a new website / app idea, getting real data is an essential step leads to a better design. It would require collaborative effort from both clients and designers to do so. To me, if I’m doing all my old projects again, this would be the way I choose.]]></description>
            <link>https://desktopofsamuel.com/design-with-real-data</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/design-with-real-data</guid>
            <pubDate>Tue, 24 Apr 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Windows 10 in 2018]]></title>
            <description><![CDATA[
I love changes, especially good changes. But Windows OS update is not one of those. I have been using Windows 7 for my home workstation nearly a decade. But I decided to update Windows 10 last week. The biggest reason is the new Premiere is dropping support Dolby AC3 (which means there is no easy way to edit my video shot on my sony cam).

Here are my Day 01 observations during the course of my setup:

1. I upgraded with my Windows 7 OEM key (although Microsoft claimed a paid upgrade is required since early 2018) I installed Windows 10 from a clean USB thumb drive. 

2. Removing items from Windows Explorer sidebar is extremely annoying. In my case, I want to get rid of OneDrive and 3D Objects. You will need to edit Registry in two different paths

3. There's a Microsoft Store now but it is nothing like Mac App Store. You can still download the app from Store (Store App) or Web (Desktop App). Some of them are exactly the same, some are not. You will have to figure it out by yourself. The only app I have downloaded so far is Netflix app, as it supports 1080p and 4K HDR. You can only stream 720p video from Chrome currently.]]></description>
            <link>https://desktopofsamuel.com/windows-10-in-2018</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/windows-10-in-2018</guid>
            <pubDate>Tue, 15 May 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Let's call it iOS Pro]]></title>
            <description><![CDATA[
9to5Mac reported a few days ago that Apple’s next big thing could be an ARM-based touchscreen hybrid with LTE connection. Another rumor is a low-cost iPhone that looks like iPhone X, but I suppose no one would find it interesting. We always imagine Apple will release Macbook with touchscreen & LTE or iPad Pro that come with MacOS. What about the idea of Apple is working on the next-generation personal device with a new OS. This whole idea gives me chills.

Desktop, laptop, tablet, mobile, and wearables basically define the spectrum of personal digital device nowadays. The most blurred line lies between laptop and tablet. iPad earned its place to be the new device between laptop and mobile since 2010, but it hasn’t become the laptop killer as initial reviews wrote. Could this codenamed “Star” project is the future of iPad Pro? Getting the cheaper entry-level iPad is a reasonable choice now since both models are so much similar, in terms of design, software and not-so-significant hardware. (Faster chip, true-tone display, and Smart Connector). It is especially case considering the new iPad released in March gained the support of Apple Pencil. But what if their software are different?

Rumors of Apple’s plan to integrate iOS and MacOS never stops, especially right before Apple’s WorldWide Developers Conference (WWDC). Apple has been sharing the same OS on mobile devices & tablet since the initial launch of iPhone and iPad. But there are actually a lot of compromises, sacrificing pro features and customization for simplicity. Giving iPad Pro a derivative iOS, separating from mobile and consumer tablets, potentially open up a new world for pro user, How about calling it “iOS Pro”? It does sound appealing to me, assuming they get software giants onboard (Eyes on you, Microsoft Office and Adobe CC), do file management right and support cross-platform & device integration.

It would also heavily rely on the support from the developer community, believing in Apple they could create the future of personal device together. WWDC is coming next week, chances are small that they would announce anything related to the rumor. As a fan, not of Apple but of technology, aside from new update on iOS, MacOS, WatchOS, and TvOS (nearly forgot), what thrills me and also my best hope would be a sneak preview of Apple’s vision to the future.]]></description>
            <link>https://desktopofsamuel.com/lets-call-it-i-os-pro</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/lets-call-it-i-os-pro</guid>
            <pubDate>Tue, 29 May 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Whole Earth Catalog]]></title>
            <description><![CDATA[
1. Steve Jobs did not say “Stay Hungry, Stay Foolish”, he quoted this line from a 452-page book named “Whole Earth Catalog”.

2. Critics and reporters have been saying the book has changed the world (not only through its influence on Steve Jobs), as a symbol of the formation of counterculture. A lot of new ideas and products, like solar power, recycling, wind power, desktop publishing were firstly introduced to mainstream audience from this book in late 1960s. 

3. The quote was printed on the back cover of its last edition, above a photo of a country road in the morning. Steve Jobs said, 

> It was a photograph of an early morning country road, the kind you might find yourself hitchhiking on if you were so adventurous. Beneath it were the words: “Stay Hungry. Stay Foolish.” It was their farewell message as they signed off. Stay Hungry. Stay Foolish. And I have always wished that for myself.

![](/static/we-1.jpg)

1. It was believed Stewart Brand, the man behind Whole Earth Catalog, persuaded NASA to make its Earth shot-from-space photos available to the public. Therefore it was the reason why the book is called Whole Earth Catalog, it was like a glimpse of humanity’s achievement, building tools for a better life. 

Read more at [Spatial Agency](https://www.spatialagency.net/database/whole.earth.catalog)]]></description>
            <link>https://desktopofsamuel.com/whole-earth-catalog</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/whole-earth-catalog</guid>
            <pubDate>Sun, 03 Jun 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How to do localization right - Citymapper in Hong Kong]]></title>
            <description><![CDATA[
After switching to Android last year, Google Map has been my first choice of transit app. Living in a city that public transport operators [discourage open data](http://harbourtimes.com/2017/08/08/reform-hong-kongs-transport-system-opening-data/), transit app is for navigation most of the time. Although selected lines of MTR and bus operators have their app to share real-time next train / bus data, yet they refuse to share them with an open API, welcoming third-party apps integration like Google Map or Citymapper.

I downloaded Citymapper ([iOS](https://itunes.apple.com/us/app/citymapper-transit-navigation/id469463298?mt=8) and [Android](https://play.google.com/store/apps/details?id=com.citymapper.app.release&hl=zh_TW), Free) again yesterday when I was looking for alternative transit route as the app include minibus. I took MTR in the end but I was impressed by all the localization efforts by the team since I was last used a few years back. While Google Map is focusing on location data and personal recommendation as announced this year at Google I/O (Considering Google core business is to collect data as much as possible), Citymapper took a different approach as it help users commute from one place to another. 

![](/static/citymapper-2.jpg)

The app’s core idea is turn people into a well-informed commuter, so user can make a the right decision to commute. In Hong Kong, Not only did all means of transport (even red & green minibus) are listed in Citymapper, they even collaborate with local transport monitor group to deliver live service update. (Given that MTR broke down all the time). Citymapper also include the location of nearest dockless bike and scooters last year globally, forecasting their vision of a city’s future on transportation. One sweet thing worth mentioning, is that they use local snacks as a reference to calculate calories intake.

![](/static/citymapper-3.png)

Here’s a list of features of Citymapper that you cannot find on Google Map    

- Real-time HKTram Arrival Time
- Route and Stations Search for Red & Green Minibus
- Real-time notification of MTR Status Update, collaborating with [MTR Service Update](https://twitter.com/mtrupdate)   
- Locating the nearest dockless bike (OFO in Hong Kong)
- Fare Calculator 
- Share Live Commute Progress & Estimated time of arrival 

In London, Citymapper is also experimenting with the idea of [Smart Bus](https://citymapper.com/smartride), a bus-taxi hybrid that is responsive to traffic and commuter destination. It could take forever to see it on the road in Hong Kong. But the idea of building next-generation transportation is very exciting.]]></description>
            <link>https://desktopofsamuel.com/how-to-do-localization-right</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/how-to-do-localization-right</guid>
            <pubDate>Tue, 03 Jul 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Essential Color Tools to Step Up Your Design Game]]></title>
            <description><![CDATA[
Color is the combination of science and art, a simple color change could have drastic effect on the emotion or perception of the viewer. Being a UI/UX designer, mastering the color theory and its application truly can step up your design game.

Stephen Few’s [“Tapping the Power of Visual Perception”](https://www.perceptualedge.com/articles/ie/visual_perception.pdf) coined the term “Preattentive Attributes” in displaying data. Intensity and hue of color are two attributes that can enhance visual communication quickly. 

> Leveraging color help users to process information, prioritize what they have seen, subsequently convert into actions. 

<cite>Stephen Few</cite>

Same rule applies in designing social media graphics and user interfaces, using color intentionally reinforces the quality of design. Here are the best color tools you can use right now to create beautiful palettes and gradients for next design project.

## 1. Digital Color Meter (MacOS, Free)

![](/static/color-tool-2.jpg)

The most convenient app to grab color code is the one built-in to your Mac. Digital Color Meter is the default Mac utilities app hidden in your Application folder. The app does one job great, capture color as you point your cursor. Simply press Shift + Command + C will copy the value into the clipboard. You can also adjust color profile (native, sRGB, Adobe RGB or P3 etc.) as well as the values to display (sRGB hex code for me). To be honest, this free app probably satisfies most people’s need in picking color.

![](/static/color-tool-3.gif)

Press “Command + L” to lock the inspector. You can copy the RGB Hex Code easily by pressing “Shift + Command + S”

![](/static/color-tool-4.gif)

## 2. Sip ([MacOS, USD$9.99](https://sipapp.io/?ref=todaydojo) / [Available on Setapp](https://setapp.com/get/sip?utm_medium=affiliate+program&utm_source=14&utm_campaign=sipapp.io))

![](/static/color-tool-5.jpg)

Consider Sip as the professional version of Digital Color Meter, it is the best color tool built  for pro-user in mind, providing seamless integration to professional workflows and applications. I love how it docks color palettes on top of the screen in a minimalist way, which allows cross-app usage.

## 3. Apple Human Interface Guidelines — Color ([Web](https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/color/), Free)

Color section of Apple’s Human Interface Guidelines is a great introductory piece for color design when you are designing websites and apps.

## 4. Adobe Capture CC ([iOS](https://itunes.apple.com/us/app/adobe-capture-cc/id1040200189?mt=8&at=10lSkU) & [Android](https://play.google.com/store/apps/details?id=com.adobe.creativeapps.gather), Free)

![](/static/color-tool-6.png)


Capture photos and auto convert real-life hues into color palettes with Adobe Capture CC. It also directly integrates to your Adobe CC’s swatches if you are a subscriber.

## 5. Cone ([iOS](https://itunes.apple.com/us/app/cone-live-color-picker/id1221305627?mt=8&at=10lSkU), USD$2.99)
![](/static/color-tool-7.jpg)

Cone is a beautiful and minimalistic color app that you can find on iOS App Store that allows user to capture Pantone colors in real-time. New version of the app has announced by the developer, stay tuned for the update.

## 6. Dribbble Colors ([Web](https://dribbble.com/colors/), Free)
![](/static/color-tool-8.png)

Dribbble Colors is a hidden treasure for UI designers who are looking for case studies of color adoption. It allows users to search Dribbble shots by color using hex code. Users also can adjust percentage of the containing color within a shot. This tool comes handy to see how a color plays out in other design.

## 7. Coloors.co ([Web](http://coloors.co/?ref=todaydojo), Free | iOS & Android, USD$1.99)
![](/static/color-tool-9.gif)

Coloors.co’s Color-blind Mode and Hue & Contrast Adjustment is user-friendly to fine tune your palette
Coolors.co is a multi-color schemes generator, with a super-fast spacebar shortcut to generate color schemes instantly. Thoughtful features including colorblind mode, able to view shades and adjust hue and saturation have contributed it to be my favourite site for color inspiration. It also has paid upgrade for iOS App, Chrome Extension, and add-on for Adobe Creative Suite.

## 8. Paletton ([Web](http://www.paletton.com/?ref=todaydojo), Free)
![](/static/color-tool-10.png)

Paletton takes on the scientific approach to find the right palette by adjacent and triad colors. It has plenty of previews and simulations to accommodate different scenarios for palette usage.

## 9. Webgradients ([Web](https://webgradients.com/?ref=todaydojo), Free)
![](/static/color-tool-11.png)

Subtle color gradients collection made for website or app background. CSS code, PNG, Sketch and PSD previews are all set to use right away.

## 10. Social Colors ([Web](https://www.materialui.co/socialcolors), Free)
![](/static/color-tool-12.png)

Material UI collects brand color for the major social media platform. Now you are one-click away from adopting the tone to your own customised banners and buttons.

## 11. Munsell Hue Test ([Web](http://www.colormunki.com/game/huetest_kiosk?ref=todaydojo), Free)
![](/static/color-tool-13.png)

Train your eyesight to be laser-like. Munsell Hue Test is a fun yet challenging game to arrange color block by hue order. Lower the score is better.

## 12. Wave ([Web](http://wave.webaim.org/), Free)

Access your website with web accessibility evaluation tool. The tool examines your site’s color contrast to meet WCAG2.0 AA and AAA standard.

I hope the article covers your need in the design field, for color inspiration, palettes creation, and color accessibility. I have created a color resources collection in my personal project Today Dojo, which delivers the best-curated design resources for creators. If I have missed anything that should have made it to the list. Find me on [Twitter](http://www.twitter.com/desktopofsamuel) and let me know! 






]]></description>
            <link>https://desktopofsamuel.com/essential-color-tool-2018</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/essential-color-tool-2018</guid>
            <pubDate>Fri, 06 Jul 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Do Subscription Models Work with Apps?]]></title>
            <description><![CDATA[
Thoughts on Setapp — subscription-based collection for Mac apps 


![Original Photo by Andrew Garrison on Unsplash](/static/setapp-1.jpeg)

Mac apps are great. They are beautifully designed, crafted with a bunch of handy features, and they have won over the hearts of their users, willing to pay for every update. Mac App Store was launched in 2011, it was Apple’s attempt to replicate the success of iOS App Store.
However, I would hardly call Mac App Store a success today.

## Walls of the App Store
![](/static/setapp-2.jpg)

Despite a cheque with a lot of zeroes are written on the slide of Apple’s keynote every year at WWDC, developers share their loves & hatred at the same time toward the monstrous platform. There are a lot of Mac apps (especially those with subscription service) have yet to become available today on Mac App Store. 


1 — App Store split developer’s sales revenue as high as 30%, which is too high especially for subscription-based service. 

2 — Developer’s demand on flexible pricing model (like paid upgrade), free trials, video trailer have been slowly responded by Apple.  

3 — Utilities app are missing on Mac App Store due to the  [sandboxing requirement. ](https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.imore.com%2Fmac-app-store-and-trouble-sandboxing&t=NzcyZDZjNDM3Mjg5ZWQ5ZmJjMzM2YWY2ZDMzZDVkYjNmMjNkMmMzMixSc3dIQkx3eA%3D%3D&b=t%3Amd_XHZDWEUh7XzJM6q1d8g&p=https%3A%2F%2Fjournal.desktopofsamuel.com%2Fpost%2F175975854762%2Fdo-subscription-models-work-with-apps&m=1)  

4 — Mac App Store is not as exclusive as iOS App Store to install new apps on Mac. A lot of developers setup online store on their own according to their pricing needs, like bundles and discount

1Password shares the struggle when they are releasing the new version in May. Their CEO, Jeff Shiner wrote,
> The App Store, for all it does well, struggles mightily when a paid upgrade is introduced because it does not allow developers to charge for an update to an existing app. When considering a paid upgrade, developers have two choices: they can re-use their existing app or submit a new one. Both have their pros and cons.

![Ulysses’s iteration of every paid app sales chart](/static/setapp-3.png)


The third way is not to rely on Mac App Store at all. But to a larger extent, the existence of paid upgrade is originated to the insufficient income for app development. The team behind Ulysses  [explained at length on their strategy switching subscription model.](https://t.umblr.com/redirect?z=https%3A%2F%2Fmedium.com%2Fbuilding-ulysses%2Fwhy-were-switching-ulysses-to-subscription-47f80b07a9cd&t=MDQ3ZmZhMWU2OWYwYmI3ZTYyNDQ5Nzc1Yzk5YTk5OTdlMmViNzliMSxSc3dIQkx3eA%3D%3D&b=t%3Amd_XHZDWEUh7XzJM6q1d8g&p=https%3A%2F%2Fjournal.desktopofsamuel.com%2Fpost%2F175975854762%2Fdo-subscription-models-work-with-apps&m=1)  Especially on how current pricing model is crooked, as developers heavily rely on new releases to get exposure and call for money.
But they raised a bigger question on software development.


##Should apps be a one-time purchase?

![Original image from setapp.com](/static/setapp-4.jpeg)

Crafted by MacPaw, the team which shipped numerous successful Mac utilities, Setapp addresses the market need for subscription service. Initial media coverage described it as the Netflix for Mac apps. For USD$9.99 per month, users can enjoy a full library of independent & popular Mac apps, including  [CleanMyMac](https://t.umblr.com/redirect?z=https%3A%2F%2Fmacpaw.com%2Fcleanmymac&t=M2U3ZDBmMjk2MWEwNTNlMWJjOTNjZGFhZGIwMDgwZTZmYzZkNWM2ZixSc3dIQkx3eA%3D%3D&b=t%3Amd_XHZDWEUh7XzJM6q1d8g&p=https%3A%2F%2Fjournal.desktopofsamuel.com%2Fpost%2F175975854762%2Fdo-subscription-models-work-with-apps&m=1) ,  [ChronoSync Express](https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.econtechnologies.com%2Fchronosync-express%2Foverview.html&t=NWRhZjk1MjJiMjBlNDBkMjkyZjM5MDZhOGJmNzA3NzJkNWFkNjAzZixSc3dIQkx3eA%3D%3D&b=t%3Amd_XHZDWEUh7XzJM6q1d8g&p=https%3A%2F%2Fjournal.desktopofsamuel.com%2Fpost%2F175975854762%2Fdo-subscription-models-work-with-apps&m=1) ,  [iStat Menu](https://t.umblr.com/redirect?z=https%3A%2F%2Fbjango.com%2Fmac%2Fistatmenus%2F&t=ZTNhNzVlODRlMDc1OWExNjY4YmFlYzU0ZWQ5M2QwZGZjYjI3NDFkZCxSc3dIQkx3eA%3D%3D&b=t%3Amd_XHZDWEUh7XzJM6q1d8g&p=https%3A%2F%2Fjournal.desktopofsamuel.com%2Fpost%2F175975854762%2Fdo-subscription-models-work-with-apps&m=1) ,  [Paste](https://t.umblr.com/redirect?z=https%3A%2F%2Fpasteapp.me%2F&t=Y2ZlYmYyMDFmZDFhMDIxYjVkNDRlYjE0OTdmNjI2Y2IwMTBjZjdiOSxSc3dIQkx3eA%3D%3D&b=t%3Amd_XHZDWEUh7XzJM6q1d8g&p=https%3A%2F%2Fjournal.desktopofsamuel.com%2Fpost%2F175975854762%2Fdo-subscription-models-work-with-apps&m=1)  and more. The convenience of a unified subscription platform, you don’t need your purchase keys anymore or bother to manage license keys on your new and old Macs.
For entertainment, the subscription model is a sweet deal, with higher user acceptance rate, but whether app subscription service is a rip-off, remains a bigger controversy. In “ [The Subscription App Paradox](https://t.umblr.com/redirect?z=https%3A%2F%2Fhackernoon.com%2Fsubscription-software-paradox-d4a1aef4d88a&t=MTQwZTgxZTY0OWE1YjVjMGYzNGFjNDZlOGViMWRmZmY0NGUwMDMzMSxSc3dIQkx3eA%3D%3D&b=t%3Amd_XHZDWEUh7XzJM6q1d8g&p=https%3A%2F%2Fjournal.desktopofsamuel.com%2Fpost%2F175975854762%2Fdo-subscription-models-work-with-apps&m=1) ”, written by Alan Marsden, digital consumption has become an unnoticeable expense, he spent £84.50 every month on digital subscription service (Apps, Media, VPN). The argument of the cost is equivalent to a cup of coffee in a month has become a lot of coffee. Setapp is also part of the solution (or the problem) by splitting its revenue according to the usage of apps listed in its catalogue if a majority of user’s apps can be found on Setapp.

![](/static/setapp-5.jpg) 

Following the success of iOS App Store revamp last year, Mac App Store is also set for revamp in the next version of MacOS Mojave this fall. Yet, Mac App Store is stepping on the road behind the shadow of iOS App Store, Apple is enhancing the experience on user’s side with better-curated collections and editorial stories to discover new apps. But for developers, channels for distributing are still fragmented.
For now, it is safe to say the subscription model for apps will not arrive soon on App Store just like Apple Music. In fact, Those popular Mac apps that I have listed above, all of them have more than a single channel and licenses to purchase or subscribe. Some of them offer single & family licenses with paid upgrade options; some are running multi-platform subscription plus Setapp subscription. Biggest sacrifice probably is the users as they have to decide which pricing model is a better bargain for them. But in a longer run, bug fixing and pushing updates across different versions would be a debt for developers to pay.

![](/static/setapp-6.png)


Setapp itself is also facing some fundamental problems on its own. Should its app catalogue strikes for quantity or quality? How to keep up with users’ momentum to try new apps and switch to new workflows? I’ll address this issues in the next article.
]]></description>
            <link>https://desktopofsamuel.com/setapp</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/setapp</guid>
            <pubDate>Fri, 20 Jul 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Why designers need a personal website?]]></title>
            <description><![CDATA[
One of my year resolution for 2018 is to learn front-end coding. I feel that being a designer, learning how to code is the way how I could step up the game in web design, by understanding how every bit and piece fall into places. 

![](/static/personal-website.jpg)

I had two personal websites, one is my Tumblr and another is my portfolio site, separately hosted and running [Cargo Collective](https://cargocollective.com/). But I was thinking, "Wouldn't it be great if both of my portfolio and blog are together?"

## Why do you need a personal website?

It's 2018. Online presence is becoming the norm, even in the professional field. Your previous work, your side projects, even your work in progress matter. 

A personal site also means more control over your message and story, whether you're looking for new clients, landing a dream job or establishing a personal brand. For sure it takes more time and effort, but I think it is quite a good practice to sharpen your skill and catching up. Needless to say, making a personal site is much easier than a decade ago. 

While platforms like Medium, Facebook Pages are building homogeneous style for coherent browsing / reading experience. Your website should pursue personality instead. I'm not saying you shouldn't post to Medium publications or run a Facebook Page, but just not as the destination but a way to reach your very own website where you deliver your message. 

## What're my options?

Speaking of the BIG question, which platform should you choose? Wordpress is great for beginners since all settings are visible without dealing with code. But it was developed as a blogging platform, so it requires specific template in order to create a decent looking personal page. 

Website builder like [Webflow](https://webflow.com/?rfsn=1574887.557b84) and [Squarespace](http://squarespace.com/) is also an elegant option, but they adopt subscription model so the cost would be definitely higher.  

After taking the [Design+Code's](http://designcode.io/) React course instructed by Meng To, I was introduced to [Gatsby.JS](https://www.gatsbyjs.org/). After trying it out for few weeks, I genuinely rooting it as the up-and-coming personal website & blog option. Because:

1. A custom personal website allows maximum creativity, a great advantage for designers.
2. It's blaze-fast. Because all files are generated already. It also adopts modern web technology like React, Webpack and GraphQL. I compared the Lighthouse audit ran on beta site and current site. Performance has insanely improved.
3. Gatsby is a static site generator, but dynamic data source is widely supported. Wordpress, Contentful or even Airtable can be used as a database. 
4. Deploying is as easy as drag-and-drop. [Netlify](http://netlify.com/) provides free hosting for static site, and Gatsby is free, meaning the project could be free as long as you have your own domain.
5. Personal reason but a good one. **I admit the process of making your own site is empowering.** It's nice to not rely on anybody and build a website designed and developed all by yourself. I've been taking some screenshots logging daily progress, will share it later.

## Last word

As Gatsby is quite new since it was first released a year ago. I wouldn't say current resources available is sufficient, but it is a strong and growing community. Most users are frontend web developer right now, but I'm optimistic to see more designers onboard.

I admit there is indeed a learning curve to React, Gatsby and also GraphQL since I know fundamental HTML and CSS only. There were long nights that I was figuring out causes of errors, which turned out to be some stupid mistakes. 

I'm writing this also for my own future reference:

> A personal website should not only showcase your work, but also speak who you are and how you work.

That's why I'm eager to share my work in progress, hoping to launch the site as soon as possible. 

Reading List: 
[Things I (honestly) don’t want to see in your portfolio](https://uxdesign.cc/things-i-honestly-dont-want-to-see-in-your-portfolio-3d3497666ca8)]]></description>
            <link>https://desktopofsamuel.com/why-designers-need-a-personal-website</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/why-designers-need-a-personal-website</guid>
            <pubDate>Sun, 26 Aug 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Building Gatsby With Multiple Post Type]]></title>
            <description><![CDATA[
<Alert status="info"><AlertIcon /><AlertDescription>This article was written using Gatsby v1.0. <a href="/gatsby-website-with-multiple-post-types/">Read my new article</a> for Gatsby v2.0.</AlertDescription></Alert>

As a designer with no prior experience in React, starting Gatsby with a starter template is the easiest way. After that, adding bits and pieces by following online tutorials and Github threads are the parts that you learn, as you understand how to adapt others' code and review each expression and argument means whenever you encounter errors.

## Use Case

I'm setting up my Gatsby to support multiple post types, as I want to display my blog articles and projects at the same time. It is useful for personal / agency site setup. Since all posts will be rendered by markdown files, they will be saved in different source folders for simplicity.

## What To Do

Let me explain the whole process verbally since there are only a few tutorials online. For the record, this assumed you have an existing Gatsby blog already.

Things we need to do:

1. Create a new "projects" folder and post under source folder
2. Edit `gatsby-config.js` to include new source folder in `gatsby-source-filesystem` plugin
3. Duplicate `blog-post.js` to create `project-post.js` template
4. Edit `gatsby-node.js` CreatePage API to adopt a separate template for different post type.
5. Create Project Main page to query project post
6. Edit Blog Main page not to query project post
7. Create Tag & Category Page for Project

## 1. Create New Projects Folder

My source folder setup is like this:

```
src
——blogs
    —— Blog Post #1
		——index.md
		——photo1.jpg
——projects
	——Project #1
		——index.md
		——photo2.jpg
——templates
		——blog-post.js
		——project-post.js
```

All blog posts and project posts will be grouped in separated folders, with individual project post named `index.md`, together with a feature photo. In this scenario, all project files will require a feature photo since it will be displayed on Project Main page.

For frontmatter of the markdown, I have added a new field called "Posttype", those specified as `posttype: project` will be queried later in project main page. Those without will be recognized as a blog post.

My markdown frontmatter setup is:

```markdown
path: "/project-1"
date: "2018-09-07"
title: "Project 1"
tags: ["app", "design"]
posttype: "project"
image: "./project-1.png"
```

## 2. Edit Gatsby-Config.js

We will need to edit gatsby-config.js in order to let Gatsby know where to look when creating a new post page.

```javascript
{
  resolve: 'gatsby-source-filesystem',
  options: {
    path: `${__dirname}/src/projects`,
    name: 'project'
  }
},
```

## 3. Create Project Post Template

Then, we will need to create a Project Post template `project-post.js`, putting in my template (src/templates) folder together with `blog-post.js`, so later `gatsby-node.js` can reference to when creating project pages.

Let's copy everything in `blog-post.js` and paste it in Project Post. This will ensure everything works accordingly. However, you will only need to rename the GraphQL query name, since all GraphQL query need to have unique name. I changed from "BlogPostByPath" to "ProjectPostByPath". We can come back and edit it later.

## 4. Edit Gatsby-Node.js

**Being a static site generator, Gatsby-Node.js handles how your site is generated.** Personally speaking, it is a rather confusing part of the whole Gatsby development process.

CreatePages should be in the file already.

```javascript
exports.createPages = ({boundActionCreators, graphql}) => {
const { createPage } = boundActionCreators
```

We will need to import the `project-post.js`right after the blog template.

```javascript
const postTemplate = path.resolve("src/templates/blog-post.js");
const projectTemplate = path.resolve("src/templates/project-post.js");
```

After that, we will use our newly created frontmatter field, "posttype" to filter all our markdown pages. Because a majority of markdown pages will be blog page, if / else argument is used here. Unless specified post "posttype" is equal to "project" (or any other posttype to be included in the future), or else Gatsby will recognise the post as a blog post.

Here's my `gatsby-node.js` file:

```javascript
result.data.allMarkdownRemark.edges.forEach(edge => {
  if (edge.node.frontmatter.posttype === "project") {
    createPage({
      path: edge.node.frontmatter.path,
      component: projectTemplate,
      context: {}
    });
  } else {
    createPage({
      path: edge.node.frontmatter.path,
      component: postTemplate,
      context: {}
    });
  }
});
```

Remember you will need starting the site again with the command `gatsby-develop` at the terminal since hot reload does not cover the gatsby-node.js page.

If you have successfully `gatsby-develop` the site, let's go to the project post path to make sure it is working. You should be seeing a blog post with your project content. Now you may adjust the project post template to suit your needs.

Right now this method is not creating a prefix path in front of the project post. So there might be a chance that project post shares the same path with a blog post. I'm still looking for a solution, feel free to suggest any.

## 5. Create Project Main Page

Now the individual post is done, let's work on a Project Main page that will query all project post.

First, all the standards:

```javascript
import React from 'react'
import Link from 'gatsby-link'

const ProjectPage = ({data}) => {
    {data.allMarkdownRemark.edges.map(post => (
        <div key={ post.node.id }>
                <Img sizes={post.node.frontmatter.image.childImageSharp.sizes} />
                <Link to={post.node.frontmatter.path} >
                    <h2>{post.node.frontmatter.title}</h2>
                </Link>
                <p>{post.node.excerpt}</p>
        <div/>>

return (
)}
export const pageQuery = graphql`
```

Then we will add our GraphQL query at the end, notice I have filtered using the frontmatter, only those markdown files with assigned "project" as a post type will display.

```graphql
query ProjectIndex {
  allMarkdownRemark(
    sort: { order: DESC, fields: [frontmatter___date] }
    filter: { frontmatter: { posttype: { eq: "project" } } }
  ) {
    edges {
      node {
        id
        excerpt(pruneLength: 250)
        frontmatter {
          path
          title
          date
          tags
          image {
            childImageSharp {
              sizes(maxWidth: 1140) {
                base64
                aspectRatio
                src
                srcSet
                srcWebp
                srcSetWebp
                sizes
                originalImg
                originalName
              }
            }
          }
        }
      }
    }
  }
}
```

Remember to add `export default ProjectPage`

## 6. Edit Blog Main

Then if you go to Blog Main page, you would still see a mix of blog posts and projects. That is because you will need to filter the GraphQL as well.

Because we use if/else function in `gatsby-node.js`, stating all post without specifying posttype will be a blog post. We cannot query this page using frontmatter's post type, we will use the filter function base on the Markdown's path.

```graphql
allMarkdownRemark (
        sort: { order: DESC, fields: [frontmatter___date] },
        filter: {fileAbsolutePath: {regex: "\/blogs/"}}
    )
```

## 7. Creating Tag & Category Page

Last but not least, we'll need to double check other components will not mix up with different post type. This is very dependable on how do you want different content type to work. In my case, I would like to separate the taxonomy between blog and portfolio. Therefore, I use different frontmatter for different post type.

I use tag for blog and category for portfolio, Tag page would be a collection of articles that I have written regarding the certain topic, while Category page would be my field of work. To set this up, I have referenced [Gatsby Material Starter](https://github.com/Vagr9K/gatsby-material-starter/blob/master/gatsby-node.js). It allows us to create Tag & Category page as long as the frontmatter is in an array format.

```markdown
category: [ "UI/UX Design", "Brand Design" ]
```

In your `gatsby-node.js` after resolving the GraphQL. Create tag set and category set to create page for each tag and category.

```javascript
//gatsby-node.js
const tagSet = new Set();
      const categorySet = new Set();
      result.data.allMarkdownRemark.edges.forEach(edge => {
        if (edge.node.frontmatter.tags) {
          edge.node.frontmatter.tags.forEach(tag => {
            tagSet.add(tag);
          });
        }

        {if (edge.node.frontmatter.category) {
          edge.node.frontmatter.category.forEach(category => {
            categorySet.add(category);
          });
        }
      }

      const tagList = Array.from(tagSet);
      tagList.forEach(tag => {
        createPage({
          path: `/tags/${_.kebabCase(tag)}/`,
          component: tagPage,
          context: {
            tag
          }
        });
      });

      const categoryList = Array.from(categorySet);
      categoryList.forEach(category => {
        createPage({
          path: `/categories/${_.kebabCase(category)}/`,
          component: categoryPage,
          context: {
            category
          }
        });
      });
```

In project template page, if you want to add a hyperlink to the category page, you can map the categories after query GraphQL. If you copied everything from `blog-post.js` , remember to change tags to category in GraphQL query. I used kebabCase to process category text into hyperlink friendly text.

```javascript
//project-post.js
{
  post.frontmatter.category.map((category, index) => {
    return (
      <span key={index}>
        <Link to={`/categories/${kebabCase(category)}`}>
          <small>{category}</small>
        </Link>
      </span>
    );
  });
}
```

This should wrap up everything you need in order to create multiple post type in Gatsby. If you encountered any problems in setting it up. Make sure you:

1. Restart localhost server every time if you have edited the `gatsby-node.js`
2. Test it step by step to eliminate any cause of error.

For designers who are looking forward to build your first Gatsby site, I recommend look for the functionalities offered by starter template instead of style and layout. This will save so much time. Changing CSS and moving around different React component is much easier than figuring how node.js work.

Feel free to share your ways of creating your own personal site using Gatsby. If you have a better solution or encountered any problems, I would love to know the case.
]]></description>
            <link>https://desktopofsamuel.com/building-gatsby-with-multiple-post-type</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/building-gatsby-with-multiple-post-type</guid>
            <pubDate>Mon, 17 Sep 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Journey to Design Matters]]></title>
            <description><![CDATA[
It was a truly enlightening trip to Denmark, attending Design Matters 2018 in Copenhagen (Sep 26 -27, 2018). Not only did the talks and workshops given by design practitioners across the industry are illuminating, but it had also made me realized to take a step back to reflect on the whole workflow of design process.

## Design for feelings

![](/static/IMG_20180927_135426.jpg)

One of the recurring theme during this year conference is the re-discovery of emotional design. Few speakers’ keynotes coincidentally brought up the importance of expressive design, while the utilitarian and minimal design has been dominated by industry leaders like Apple and Google. Tobias Ahlin from Minecraft stressed on the building emotionally engaging design style, that would eventually craft a distinctive voice for the brand.

The question, “What are the key moments how your user feels” should also be addressed during the design process, aside from the quantitive approach, especially feelings are not measurable from data analysis.

## Become a hybrid designer

![](/static/IMG_20180927_131449.jpg)

Joining over 900 designers around the world, I’m also excited signing up two workshops, which were equally fun and inspiring, including "Game Design" workshop hosted by Dori Adar (Hands on Games) and "New Hybrid Designer" facilitated by McKinsey Design.

One reason why I chose these two workshops was to getting myself familiar with the new aspect of the design, by introducing gamification to the design process and also talking about the business value of it.

Becoming a hybrid designer has become truer in current days, in a sense that multi-discipline designers would be more communicative to make a pragmatic and sensible design choice.

## Takeaways

![](/static/IMG_20180926_183634.jpg)

Making design happens takes more than a person or designers to be involved. Design values that we should uphold, the mindset of management and clients are also equally important in the design process to make it work.

After intensive talks and workshops for two full days. This trip has been rewarding for myself to take a look at my own approach and position. Taking a step back to see the bigger picture would make the journey of design come clear.
]]></description>
            <link>https://desktopofsamuel.com/journey-to-design-matters</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/journey-to-design-matters</guid>
            <pubDate>Sat, 29 Sep 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Lessons from IKEA]]></title>
            <description><![CDATA[
![](/static/IMG_6226-Web-2.jpg)

My journey to Scandinavia continued in  Älmhult, Sweden (2 hours of train ride from Copenhagen), after the Design Matters conference. It was the home of the biggest furniture retailer in the world - IKEA. The town as the headquarter of IKEA, offers a museum and also a hotel, just for the visitors.

## Experience Design in 1950s

![Print ad of IKEA in 1950.](/static/IMG_6215-Web-1.jpg)

IKEA was founded as a mail-order business by Ingvar Kampradin 1943. It grew and started selling furniture a few years later. In 1951, The first IKEA catalog is published.

IKEA catalog is such an iconic part of the brand, this has been the tradition carried on for nearly 70 years. The catalog embodies the vision of IKEA, also putting their product in context. Reading the catalog made it unstoppable imagining IKEA furniture in your home. 

![First cover of IKEA catalog in 1951.](/static/IMG_6232-Web-3.jpg)

Of course, the journey of experience design expanded through the showroom. Furniture is delicately decorated as a full bedroom, dining room, kitchen etc. Everything has to be seen and touched, in order to demonstrate the quality of the product. 

It was Experience Design in today’s term, customers are immersed through company’s mediums to see a better version of their home, triggering a deeper connection to build personal space. That is completely different from the usual routine of replacing broken furniture from furniture stores.

## Ikea Democratic Design

IKEA has become the icon of Scandinavian design and culture after it has rapidly expanded around the world. Their design manifesto “IKEA Democratic Design” was the core philosophy to develop products for tens of millions home around the world.

“Form, Function, Quality, Low Price and Sustainability” are five principles that all IKEA products have to meet. Part of the museum features the process of Democratic Design. It might sound impossible to meet all five principles, but this requirement pushed so many innovations in the company’s product catalog to be fashionable, sustainable, durable while with a low cost of production. Allen key was one of the examples that have become the iconic symbol of the Do-It-Yourself movement. 

![](/static/IMG_6243-Web-4.jpg)

I’m reading the book “IKEA Democratic Design” right now, available to purchase in the museum, will share more insights after finishing the book. ]]></description>
            <link>https://desktopofsamuel.com/lessons-from-ikea</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/lessons-from-ikea</guid>
            <pubDate>Mon, 08 Oct 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Practical Evernote Tips]]></title>
            <description><![CDATA[
TLDR: Practical Evernote tips that help you to build your own knowledge base and get things done (GTD)

I have been a long-time user of Evernote but I have only been subscribed to their paid plans until recently, which is why I totally understand the challenges that Evernote is facing. Not only there has been a recent shakedown in Evernote's management team, but I also worry about the platform's future.

Serious competitors like [Bear](https://itunes.apple.com/us/app/bear/id1016366447?mt=8) and [Notion](https://www.notion.so/?r=03ba56842b4b42a2916de481e0aa9754) took on new approaches to the note-taking field, Notion is more versatile in collaboration, especially in project and data management, while Bear offer more pleasant user experience exclusively on Apple ecosystem. Evernote, on the other hand, has yet to give us a glimpse of the future of note-taking.

With the brand revamp last month and foreseeable major app revamp upcoming. Let’s take a look at the existing Evernote and introduce a few tips that I’ve recently discovered.

## Better to be late than sorry: Templates

![](/static/Template.png)

Templates should have been on Evernote since it was ever released. Before that, I always had a template tag with all the reusable documents. But it's better to be late than sorry. Templates might not be very useful for long-time pro users since I assume most of them developed their own workflow already. But it is always nice to check out how do other people work, it would be even better if people can submit and share their own template. At least you can do it in your notebook, by clicking "Save as Template" in context menu next to the title.

## Tables have been revamped

![](/static/Tables.png)

My impression of the old Evernote tables was always lack of style and function. It was a pure html table without much formatting options.

New table features revamped a year ago, but I have discovered only recently. Supporting drag-and-drop rows and intuitive controls allow my notes become more systematic. Usually, I use tables as a header template for document type, like meeting notes and agendas. It is much easier than writing on a completely blank note.

## To-do List + Saved Search with Filters

![](/static/Saved-Search.png)

Most people used Todoist or Wunderlist or Things for task management. But practicing bullet journals since last year has made me realized it is more important to be engaged with the task in time than tools itself. The essence and also the beauty of Bullet Journal system is a fresh start every day and copying unresolved tasks manually to remind yourself.

Using Evernote as a to-do list might not be your obvious choice, but it's worth exploring as an alternative option. Typing [ ] on keyboard anywhere would convert into an interactive checkbox. And the best part is the advanced filtering.

Evernote's saved search feature (also could be queried like a notebook) allows users to filter notes. In my case, I created a filter in my todo notebook, that will show all notes with unchecked boxes. This has become my main task list. Since I would cross-out checkbox even if I haven't finished the task, this to-do filter will automatically display my daily tasks and monthly tasks.

Check out this official guide on how to create saved search [https://help.evernote.com/hc/en-us/articles/209005267-How-to-create-a-saved-search](https://help.evernote.com/hc/en-us/articles/209005267-How-to-create-a-saved-search).

## Full Customizable Widgets (Android Only)

![](/static/Widgets.png)

I love Evernote's Android widget that everything is customizable. You can query the notes to show on the widget, arrange the order of action bar icons and even which notebook are those quick notes are saving to.

This kind of flexibility allows me to turn my Android widget into an inbox of my inspiration and to-do items. All new ideas and tasks are entered on the go.

## Masonry Grid View (Windows Only)

![](/static/Masonry.png)

It is weird that Evernote has actually built a Masonry Grid View (It's called Thumbnail View), but the feature is only limited to Windows Evernote. This feature is useful for designers who want to collect visual graphics within a notebook. You can even control the numbers of columns you want to show in the grid.

## Last Words

In the meantime, I'm also experimenting with other note-taking tools. Since I'm especially obsessed with the idea of building a personal knowledge base. Suggest your favourite Evernote hack / tips and share them with me on [Twitter](http://twitter.com/desktopofsamuel) / [Medium](http://medium.com/@desktopofsamuel)
]]></description>
            <link>https://desktopofsamuel.com/practical-evernote-tips</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/practical-evernote-tips</guid>
            <pubDate>Mon, 29 Oct 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[2018 October Update]]></title>
            <description><![CDATA[
It was a challenging yet rewarding period in the last two months. I have set up the bare-bones structure of my personal site, yet it was a long way until perfect. Without much resources on the Internet, coming up with a decent design and functional website is a long learning process. In the last two months, I have managed to: 

- Revamped landing page with new design and content. I have added my service section and an about section with [React Simple Map](http://react-simple-maps.io) as background (but it could function so much more)
- Revamped work page design. The section background is dynamic now to match every projects' brand color (manually input from the markdown files).
- Added mobile navigation and animation with some icons that I drew.
- Added 404 Page. One small step for man, one giant leap for mankind.
- Added [Work Category Page](./categories/ui-ux-design), each service can be viewed individually with relevant projects
- Enhanced landing page experience by cool reveal animation using [React-Reveal](https://www.react-reveal.com/)
- Enhanced scroll animation using [React Anchor Link Smooth Scroll](https://github.com/mauricevancooten/react-anchor-link-smooth-scroll) when you click Get In Touch on landing page
- Enhanced blog reading experience especially with code block. Code will highlight according to the language using [Gatsby-Remark-PrismicJS](https://www.gatsbyjs.org/packages/gatsby-remark-prismjs/)
- Enhanced footer design by replacing the author component, also added social media links and contact access.
- All blog posts have a feature image now on the top
- Fixed related post referenced to [Gatsby Material Starter](https://github.com/Vagr9K/gatsby-material-starter/blob/master/gatsby-node.js) node.js
- Fixed code block overflow problem in blog
- Fixed Footer Width Problem
- Fixed Tag & Category with multiple words in slug using [kebabCase](https://lodash.com/docs#kebabCase)]]></description>
            <link>https://desktopofsamuel.com/2018-oct-update</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/2018-oct-update</guid>
            <pubDate>Wed, 31 Oct 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Lessons learned from personal project]]></title>
            <description><![CDATA[
### Getting Started.

There is no better time to start your personal project than today. I have been living in the bubble of agency model for years taking client projects. There were regrets and compromises accommodating with clients’ need and reality. I have always wondered the decision that I would make if I'm in charge. 

So, when the idea of building a design resources site strikes me, I immediately started to test out the idea all by myself. I put aside all the standard design workflow in my agency. No more writing specs, no more wireframing. There were a few mockups created. And I built a prototype purely using Webflow.

It's called Today Dojo, aiming to provide daily resources for designers and creators to step up their game.

### Quick iteration meaning to adapt faster and better.

I have pivoted 2 times and then rewrote the whole site for once. The initial idea was to build a browser extension that delivers daily resources to users' new tab. But the idea has scaled down to a website first, since the content is all that matters.

![](/static/Dojo-Webflow.png)

So I used Webflow to experiment the whole project with its own CMS and hosting. Webflow excels at building launch-ready websites instead of static mock-ups. Its customised CMS allows me to set up the database with rich media. Photos, text, link and date, reference entries (tags and categories) can be previewed instantly.

### The sooner I kickstart operation, sooner I realise real problems.

All plans sound perfect on paper. My initial plan is to hunt 10 resources every day, I even designed the website layout for the content update cycle. But it only took a week of operation, for me to realise such workload is too overwhelming, Given that I’m working on a part-time basis. And the site should value quality over quantity anyway. Webflow allows me to quick adjusting the layout and my schedule, lining up with social media and newsletter.

### Finding the value and sustainability is key.

After the site has launched, I have managed to bring adequate traffic to the site. Even though there were plans on monetizing the website, but it was too early to do so. A bigger question arises:

> How do I find time and money to keep it going? 

At the same time, I'm also finding myself desperately need more time and sources to research on my content. I need to strike a balance between acquiring new content and expanding on design categories.

### Scaling down is the step up not a step back.

So after two months of part-time running the site, I have decided to rollback to a smaller scale. Here are the main reasons:

1. You'll see there's a cost of using a code-free solution, [Webflow's CMS hosting plan](https://webflow.com/hosting) cost USD $16 per month alone. If you have more than 2 projects, you'll need to pay another USD $16 for pro membership subscription.
2. I felt that running a separate social media accounts are time-consuming. Even I have already using aggregated social media tools like Buffer. Scheduling and reposting content from the site simply does not worth the effort.

While I was launching a curatorial site, I was also learning to code my own portfolio. So when my portfolio has completed, I asked myself why not code my own project as well? So I rewrite the site using [Gatsby.JS](https://www.gatsbyjs.org/) Using Github and Netlify, I hook up with backend platform [Prismic.io](https://prismic.io) with Gatsby Prismic Starter. The cost then cut down to be free while I could still update site content separately.

![](/static/Rebrand.png)

Another thing I did is rebranding. I roll back the site into a subsidiary site under my personal domain. Renaming the site with a coherent name and navigation bar makes the experience more unified among my other sites. It also adds more regular content to my personal twitter account with human touch, rather than reposting content like a bot. 

![](/static/Pin-Home.png)

Now the site is renamed to be Pins, and available to browse right now at [https://pins.desktopofsamuel.com](https://pins.desktopofsamuel.com). Old site is also available on [http://dojotoday.webflow.io/](http://dojotoday.webflow.io/). Check it out now! 
]]></description>
            <link>https://desktopofsamuel.com/lessons-learned-from-personal-project</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/lessons-learned-from-personal-project</guid>
            <pubDate>Tue, 11 Dec 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Feature Wishlist for My Favorites Apps in 2018]]></title>
            <description><![CDATA[
I'm starting a new tradition this year by writing a feature wishlist to apps and services that I use regularly. Instead of tweeting complaints, why not make it a constructive suggestion so developers can take it seriously? Here's a list of suggestions I wrote:

### 1. Splitwise

It is not easy to get your friends onboard to an app. What's great about Splitwise is all splitted bills can be recorded on one side. (Invitation will be sent automatically once expense has marked) It is very useful when you share a flat. But I found it extremely useful when a group of friends traveling together.
Splitwise supports international currency (for record purpose but not amount conversion) and updated recently on unequal amount expense. But if I can record each expense's payment method, it would be perfect. Right now, It's a bit stupid for me to write "Credit Card" behind each expense's name, so I can reference when I crosscheck with credit card statement.

### 2. Kayak

Another travel use case that's desperately need an upgrade is Kayak. Kayak currently works exceptionally collecting all my bookings from my Gmail inbox, they even created a new dashboard to review all my travels. (I know there's privacy concern, but automatically compiling a trip plan is freaking cool) It is very close to become my go-to travel app, all I need is to support sightsee planning.
The itienary app is all around booking right now, although custom booking can be added. Wouldn't it just be great to add sightsee / point of interest so to speak ? It would be even better if public transport routes can be included.
On iOS, Kayak has also supported Siri Shortcuts, asking for your itinerary would laid out all your today plans immediately.

### 3. Whatsapp

Probably this is the most popular request for WhatsApp, but it really has to deal with multiple accounts in 2019. With e-SIM support on new generation of iPhones, constraining each phone for one WhatsApp account is totally out of sync from 2019. Facebook and Instagram both support multiple accounts ,why not WhatsApp? Current workaround is a separate phone connecting to the Wifi snd a third-party app pretend to be a desktop and browse messages via WhatsApp Web mode. That's the most unpleasant experience to dealwith multiple accounts .

### 4. Pixel Camera
Google Pixel comes with a powerful camera app that surpass every Android manufacturer. With features like Xx HDR and Night Sight. It’s by far the best Camera app you can get. There’s even a site dedicated for other Android users to use Google’s camera app. However, back to basics, I still find the app largish with slow respond time. Taking the first shot might take second spot to load up after pressing shutter button. The point of capturing life moment instantly as Google advertised, might be false. My camera roll is fill with shots taken in delay with empty streets or my pants pocket. You can imagine how slow it was.

### 5. Figma

Being a product designer, playing around Figma to test and implement new ideas was my default duty. There is a lot hidden gems there are hidden everywhere. Like Rename and Layout . 2018 is a big year for Figma but there's still a lot to work on. Personally I look forward to use Figma on mobile or tablet devices as Figma is a web-based applications. (It's exclusively work on Chrome OS right now, so we know it's possible)

It would be much more powerful if the platform support more complex file structure, this is also related to frame management, as well as structuring all components. There's no definite answer how to setup a design system for a team of designers, to deal with design in different sprints and version control. It takes time for me to set up a workflow to support continuous development (Ideation, Development, Review, Archive).]]></description>
            <link>https://desktopofsamuel.com/feature-wishlist-for-my-favorites-apps-in-2018</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/feature-wishlist-for-my-favorites-apps-in-2018</guid>
            <pubDate>Tue, 15 Jan 2019 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[I realise I dont need a read-it-later service. You should too.]]></title>
            <description><![CDATA[
And here's a month passed in 2019. 11 more to go. By this time, your new  year resolutions probably are either a failure or a good start. While I was refining my Todoist workflow, I have realised I don’t need a read-it-later service. The idea is to replace read-it-later app by your todo app and note app. 

## How it works
Eliminating a read-it-later app is one step closer declutter your digital life. One less app in your phone and Chome extension / bookmark, as it could be replaced perfectly. 

I use [Todoist](https://todoist.com) as my daily task management app, it would become the trigger whenever I saw something to read later. (Similarly, Todoist has an desktop and mobile app and as well as a Chrome Extension). Zero inbox philosophy would help me to process them daily, without delay. Those articles will be imported to Evernote with the sophisticated tagging system. 

## Why should it do the same?

I have been using Pocket primarily as my read-it-later service together with Facebook Saved. Few years ago, hundreds of saved links are stored on Pocket by the end of the year, that are something might be useful yet I don’t want to browse it yet. Clearing up my Pocket and Saved links have become one of my chores.

Making my to-read articles part of my todo list, is a solution to end my chores and integrate my digital life. In the time with too many choices of productivity tools, our digital life are fragmentated and attentions are delayed. the notion of picking the right one / figuring how does it work are drawing far more attention than getting things done. 

## Setting Up
Best of this solution is it’s doesn’t require much setup. There are only two rules:

**1. Keep it all at the same place and**

**2. Clean your inbox regularly.**

Review your read it later database and summarise most of the sources. Making sure you if easy access to the todo app. For me, it’s mostly from social media and feedly. Then, download the app or install the extension on Chrome. 

## How to make it even better

I use the Share extension most often to add articles to my to-do list, you can basically share anything to your todo app and make it an independent task.

Make sure you re-order or pin it for quick access. Next time. You come across any articles or video to watch, just press share and select the todo app. On Android you can even attach articles to task as a comment. 

![](/static/read-it-later-p1.png)

![](/static/read-it-later-p2.png)

## Era of Fragments 

Stepping into a new year, I'm less interested to  incline to spark joys by subtraction rather than addition. Hopefully my tools in 2019 than experimenting new ones. Feel free to share your stories of subtracting with me!

Tools are promoting in their ideal use cases, but in real life using many of them will only cause mess. 
it messier and delays our attention. There are a lots of productivity tools that we can use and they have all promoting the ideal use case. But the fact is when there are too many tools, 
When I realise I don’t need read-it-later service, it was obvious that the best alternative is directly to use my todo app + note app. Todo app would be the trigger while note app woThe philosophy of keeping the inbox clean wouldIn my case, it’s Todoist. ]]></description>
            <link>https://desktopofsamuel.com/i-realise-i-dont-need-a-read-it-later-service</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/i-realise-i-dont-need-a-read-it-later-service</guid>
            <pubDate>Sun, 17 Feb 2019 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Fixing iOS Books Cover Problem with custom ePUB]]></title>
            <description><![CDATA[
![](/static/ipad.png)

Look at my new iPad Books screen. All book covers are gone. 

I have bought the new iPad Mini 5 recently and I'm trying to transfer all my books from old iPad to the new one. Using iCloud Reading Now allows me to sync all devices with my books, notes and highlights, even those are not purchased from the Book Store. However there is one problem, all the book covers are missing.

After testing on several devices, I realise the cover is still there but unable to display on iPad and iPhone, yet on Mac Books app all of them are displaying correctly. Until Apple resolves this issue, there is a quick fix to make your Books home screen shine again.

## How To Transfer Apple Books to new device via iCloud

Make sure you have plenty of space on your iCloud. I'm using 5GB free plan right now but my books only occupy around 200MBs. There are two places in Settings you will need to check. 

![](/static/ipad-settings.jpg)


1. Settings - Passwords & Accounts - iCloud - iCloud Drive - Books
2. Settings - Books - Reading Now & iCloud Drive

Both options look similar but it functions separately. By turning them on, all books and PDF are now uploading in to iCloud together with bookmarks and highlights. 

## How to fix book cover display problem?

Current workaround requires you to have either original ePUB copy or a Mac, which you can retrieve the ePUB from Books App after syncing with the cloud. 

My workaround basically removes your books and reimport it immediately. Since all reading metadata (bookmark, highlights and notes) supposingly remain in the Books app, as long as the files imported are identical to your library. None of the data will be lost. 

![](/static/ipad-2.png)

After retrieve book source files, I uploaded all of them to Google Drive. Then I used “Open in” feature to move the ePUB to Books. Cover should be recovered immediately. Of course you should start with one book first and proceed cautiously one by one.

That’s it! Feel free to reach out if there are any questions, I will answer them if it help.]]></description>
            <link>https://desktopofsamuel.com/fixing-ios-books-cover-problem-with-custom-epub</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/fixing-ios-books-cover-problem-with-custom-epub</guid>
            <pubDate>Sun, 31 Mar 2019 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Creating Gatsby v2 Website With Multiple Post Types]]></title>
            <description><![CDATA[
## Intro

This is an update to my previous article [Building Gatsby With Multiple Post Type](./building-gatsby-with-multiple-post-type), as I have rebuilt my whole site using GatsbyJS v2. I switched from [Gatsby default starter](https://github.com/gatsbyjs/gatsby-starter-default) to [Gatsby Advanced Starter](https://github.com/Vagr9K/gatsby-advanced-starter) which save me some time setting up foundation of the website. (e.g. Tags, Category, SEO etc)

But please note that this starter contains no UI or any style, you will need to build it on our own. If you are a designer with some front-end development experience, this is the place.

## Use Case

I want setup my website supporting multiple post types, both blog articles and my previous work will be found within the same site. This freelance / career portfolio setup works the best for designers who love to write.

## Overview

This tutorial has been one of my most viewed article since launch since there are only a few tutorials online. Assuming you have already setup a Gatsby site already.

Things we need to do:

1. Create a new "project" folder and post under source folder
2. Edit gatsby-config.js to include new source folder in  gatsby-source-filesystem plugin
3. Duplicate blog-post.js to create project-post.js template
4. Edit gatsby-node.js CreatePage API to adopt a separate template for different post type
5. Create Project Main page to query project post
6. Edit Blog Main page not to query project post
7. Create Tag & Category Page for Project

## 1. Create New Project Folder

```
src
——content
    ——blog
        —— Blog Post #1
            ——index.md
            ——photo1.jpg
    ——project
        ——Project Post #1
            ——index.md
            ——photo1.jpg     
——templates
        ——blog-post.js
        ——project-post.js
```

This is my new source folder setup. I have created one more directory level under `Content` . Example articles will required to move down one level by creating a `Blog` folder. Of course, you need `Project` folder as well. For quick demo purpose, I have renamed some dummy articles as Proejct 1, 2, 3 and saved in `Project` Folder.

I have also add a new field "Posttype" in order to specific the post type in case there are more content types.

My frontmatters in project files are:

```markdown
---
posttype: "work"
path: "/project-1"
date: "2019-05-01"
title: "Project 1"
category: "UI Design"
tags:
- "app"
- "iOS"
- "Android"
cover: "./main.jpg"
---
```

## 2.Edit Gatsby-Config.js

We will need to edit gatsby-config.js in order to let Gatsby know where to look when creating a new post page. You will need to rename for blog post as well as we moved them in a folder.

```jsx
{
  resolve: 'gatsby-source-filesystem',
  options: {
    path: `${__dirname}/content/blog`,
    name: 'posts'
  }
},
{
  resolve: 'gatsby-source-filesystem',
  options: {
    path: `${__dirname}/content/projects`,
    name: 'projects'
  }
},

```
Type `gatsby develop` in  command line, you should be able to see both blog and project files showing in the home page.

## 3. Create Project Post Template

Then, we will need to duplicate a new post template for project. Duplicate `post.jsx` in `src/template/` folder and rename it as `project.jsx`.

Everything could stay the same except the GraphQL query name, as it requires to have unique name. Let's rename it from `BlogPostBySlug` to `ProjectPostBySlug`.

```jsx
//project.jsx
export const pageQuery = graphql`
    query ProjectPostBySlug($slug: String!) {

```

## 4.Edit Gatsby-Node.js
Being a static site generator, `gatsby-node.js` handles how your site is generated. Personally speaking, without knowledge in Node.js and JavaScript, it is rather complicated to understand the meaning of each line.

On the bright side, that is the reason why I started with the advance starter. It already offers basic Gatsby architecture (e.g. rendering path and creating tags and category) in this file and all we need is 3 changes.

1. Import `project-post.js` as one of the template

After the `CreatePages`, look for `const postPage`. We will need to import the `project-post.js` right after the blog template.

```jsx
//gatsby-node.js

const postPage = path.resolve("src/templates/post.jsx");
const projectPage = path.resolve("src/templates/project.jsx");
```
2. Query Posttype In GraphQL
After that, we will use our newly created frontmatter field, "posttype" to filter all our markdown pages. Let's query `posttype` under `frontmatter` in GraphQL.

```jsx
resolve(
      graphql(
        `
          {
            allMarkdownRemark {
              edges {
                node {
                  frontmatter {
                    tags
                    category
                    posttype
                  }
                  fields {
                    slug
                  }
                }
              }
            }
          }
        `
```
3. Add New Argument For Two Content Types
Because most of markdown pages will be blog post, if / else argument is used here. Unless specified post "posttype" is equal to "project" (or any other posttype to be included in the future), Gatsby will recognise the post as a blog post. We'll replace existing CreatePage function to a if/else condition for two content types. Everything should be wrapped within  `result.data.allMarkdownRemark.edges.forEach(edge => {` in case there are any problems with the parenthesis. 

```jsx
// Replace this
createPage({
            path: edge.node.fields.slug,
            component: postPage,
            context: {
              slug: edge.node.fields.slug
            }
          });
```

```jsx
// With This
if (edge.node.frontmatter.posttype === 'project') {
          createPage({
            path: `/project${edge.node.fields.slug}`,
            component: projectPage,
            context: {
              slug:  edge.node.fields.slug,
              category: edge.node.frontmatter.category,
            }
          });
        } else { // blog post
          createPage({
            path: edge.node.fields.slug,
            component: postPage,
            context: {
              slug: edge.node.fields.slug, 
              category: edge.node.frontmatter.category,
            }
          });
        }
```
Try run `gatsby-develop` in command line making sure everything works. Also, remember to change add `posttype: "work"` in all project markdown files. You might notice index page link to project files will result in error since we have specified the path to "/project/project-1" while the PostListing component does not recognize. We will fix that in the later step. 

![](./post-type-1.png)

Before we go on, because Gatsby Advance Starter already built with Tag and Category taxonomies. I will skip this part in this tutorial, you can still reference to the old article for more details. (Codes are the same since Gatsby Advance Starter was based on Gatsby Material Starter). We would move on fixing the index page PostListing component instead. 

## 5. Fix PostListing Component

I assume the new project content type will showcase differently with larger photos and less text, let build a brand new component for it. Let's create ProjectListing folder and `ProjectListing.jsx` in component folder. Let's copy everything from `PostListing.jsx`. I have only renamed the component name to ProjectListing and changed the Link to support path prefix.

```jsx
 {/* Your post list here. */
        postList.map(post => (
          <Link to={`/project/${post.path}`} key={post.title}>
            <h1>{post.title}</h1>
          </Link>
        ))}
```


## 6. Fix Index Page
Then we will need to edit `index.jsx`. Import the ProjectListing component
```import ProjectListing from "../components/ProjectListing/ProjectListing";``` 

And then we will edit the GraphQL query. I have added `blog` alias to the original query. I have also added a filter according to the file path. `filter: {fileAbsolutePath: {regex: "/blog/.*\\.md$/"}}` Then duplicate the query and rename it to `project`.

```graphql
query IndexQuery {
  blog: allMarkdownRemark(
    limit: 2000
    sort: { fields: [fields___date], order: DESC }
    filter: {fileAbsolutePath: {regex: "/blog/.*\\.md$/"}}
  ) {
    edges {
      node {
        fields {
          slug
          date
        }
        excerpt
        timeToRead
        frontmatter {
          title
          tags
          cover
          date
        }
      }
    }
  }
project: allMarkdownRemark(
  limit: 2000
  sort: { fields: [fields___date], order: DESC }
  filter: {fileAbsolutePath: {regex: "/project/.*\\.md$/"}}
) {
  edges {
    node {
      fields {
        slug
        date
      }
      excerpt
      timeToRead
      frontmatter {
        title
        tags
        cover
        date
      }
    }
  }
}
```
After that, create ProjectEdges in order to start another GraphQL query. `const projectEdges = this.props.data.project.edges;`. We will need to add the new component after existing PostListing. `<ProjectListing postEdges={projectEdges} />` . Try serve with `gatsby-develop` again to see if everything goes accordingly. 

--- 

This should wrap up everything you need in order to create multiple post types in Gatsby. If you encountered any problems in setting it up. Make sure you:

- Restart localhost server every time if you have edited the `gatsby-node.js`
- Test it step by step to eliminate any cause of error
- Check out my repo [Multiple Post Type](https://github.com/desktopofsamuel/gatsby-tutorial-multiple-post-types)

Feel free to share your ways of creating your own personal site using Gatsby. If you have a better solution or encountered any problems, talk to me on [Twitter](http://www.twitter.com/desktopofsamuel). Stay tuned if you are interested in more Gatsby tutorial and walkthroughs! 

]]></description>
            <link>https://desktopofsamuel.com/gatsby-website-with-multiple-post-types</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/gatsby-website-with-multiple-post-types</guid>
            <pubDate>Wed, 01 May 2019 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[[Solution] Canon batteries LP-E6 cannot charge]]></title>
            <description><![CDATA[
One of the reasons why I’m still using DSLR instead of switching to mirrorless, is because the unit is durable. Take my 6 years old Canon 6D as an example, it’s weather sealed, batteries last for days (photography only), buttons and dials are still usable (less tactile though).

But recently I have experienced issues with my Canon 6D batteries, LP-E6, most of them wouldn’t charge even I have plugged in for days. For a while I almost believed it’s either battery failure or my charger wouldn’t work, but I have found solutions from Canon official website. It even works for OEM batteries.

## Symptoms:

Battery charger is blinking at full speed after the battery is plugged in. Normally it would slowly blink or blink few times in a roll depending on your battery level. Constant flickering according to Canon's Manual, it means connection error, so it is possible the battery is not charging at all, which is not ideal when travel, realising your battery was not charged overnight. 

## Solutions

As official Canon suggest, this maybe the result of battery not charging for a long time, which is exactly my case. All you need to do is:

  1. Plug in the battery and wait for the constant blink
  2. Take out the battery for 10 seconds
  3. Plug the battery in again

It would somehow restart or successfully recharge itself! That’s it. Canon mentioned this as an additional notice from their website, you can read more at [Canon](https://www.usa.canon.com/internet/portal/us/home/support/product-advisories/detail/adv-batt-charger).

]]></description>
            <link>https://desktopofsamuel.com/solution-canon--batteries-cannot-charge</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/solution-canon--batteries-cannot-charge</guid>
            <pubDate>Sat, 08 Jun 2019 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Thanks to Figma Plugins, Automated Work Spares More Time For Design]]></title>
            <description><![CDATA[
It’s been a while since beta but [Figma Plugins](https://www.figma.com/c) is finally here. While Sketch is catching up with their cloud capabilities, Figma has also been working on proper third party support.

Figma has become my main design tool over the past year. I have been using it for interface and website design on a daily basis. Our social media and marketing assets are also created in Figma for easy collaboration and bilingual support. (I’m writing another piece to elaborate our process, stay tuned.)

After a few weeks of us, I can conclude the best part of Figma Plugins is automation. With Figma Plugins, tedious steps become one simple click. Inputting data can also be set up without any coding effort. Tidying up components finally feel not stupid. I felt motivated to re-organize my artboards again. I started to think it is not a time-consuming process as it was before.

## Getting Started

![](/static/figma-plugin-plugin-main.png)

If you have updated Figma to the latest version, you can find it on the main page. Installing plugins are slightly easier than Sketch as everything is distributed through Plugins page. Simply click install the plugin will be downloaded in no time.

Here is a pro tip that you must try. You can speed up the workflow by learning the quick-search shortcut `Command + .`. Essential it is a shortcut to search for any functions and execute them. (Like Sketch Walker). All you need is to remember the keyword and go for it. It is way faster than clicking "Right Click” - "Plugins” - "Plugin that you want to open” with your mouse. (FYI Figma’s keyboard shortcut is the role model every app should adopt. This is how users can pick up the learning curve, click "Help & Account” to enable the shortcut panel)

Here are 4 plugins that I found the most useful and interesting that can speed up your design workflow.

## Google Sheets Sync - Designing with custom real data

I wrote about my expectation of being able to [design with real data ](./design-with-real-data) a year ago.
With Figma Plugins, it is now possible to write a custom plugin to fetch data from API, take the most realistic approach on design. After trying out [Google Sheets Sync](https://www.figma.com/c/plugin/735770583268406934/Google-sheets-sync), I realized it was an even better way. Here’s why:

1. Zero coding effort, that’s the dream. Export any data in csv and upload it, or just create your own using Google Sheets.
2. You can collaborate on the data with your team. Make sure to include edge cases (like long text, different languages, empty state) in your data set.
3. All data will be updated accordingly when it was synchronized. You can also try formulas like IF / ELSE in Google Sheets to achieve so much more.

![](/static/figma-plugin-google-sheets-sync.png)

Set up the spreadsheet with all data and map first column name with Figma’s layer name, by adding a “#” hash in front. Make sure you have duplicated the components and paste the link in the plugin. All components with matching name will apply with Google Sheets data. The plugin for sure will saves tons of time comparing to inputting fields one by one. The end result may not be pretty but it will allow me to foresee design flaws ahead.

![](/static/figma-plugin-google-sheets-sync-after.png)

## Sorter - Re-order layers in one click

![](/static/figma-plugin-sorter.png)

A part of my design time includes preparation for developer handoff. The process includes cleaning up layers, grouping up and re-naming them. Sorting layers visually from top to bottom enables developers to understand the visual hierarchy. These tasks are useful but can also be menial. But those days are over with Sorter.

[Sorter](https://www.figma.com/c/plugin/742038190980789811/Sorter) is able to sort all selected layers automatically according to the rules you set. This is pretty amazing by speeding up your workflow 10x.

For example, in the previous demo, the movie card components are sorted randomly. Select all layers within the component and open Sorter, it will allow you to pick different sorting rules. For me _“Position (Top Left to Bottom Right)”_ is the most useful for HTML or any component structures. It’s just one simple click.

![](/static/figma-plugin-sorter-after.png)

## Stark - Make a habit to check color contrast all the time

There are plenty of color contrast checkers online, but either you have to input the color hex code or you have to capture the screen and upload it.

![](/static/figma-plugin-stark.png)

[Stark](https://www.figma.com/c/plugin/732603254453395948/Stark?ref=desktopofsamuel) simplified the process by selecting two layers in Figma. It also can simulate 4-8 colorblind situations.

Let’s check the color contrast of the movie card’s director field. For normal size text, the recommended standard is to meet [W3C](https://www.w3.org/TR/WCAG20/)’s minimum AA rating, a contrast ratio of at least 4.5:1 (AA). The current color does not match the rating, so we have to increase to contrast. I have changed the color from #848BAF to #636B94, now we have passed the contrast checker.

Stark also offers a PRO subscription that includes more colorblind situations as well as rapid contrast checking. Check out [their website](https://getstark.co/pricing/index.html) for more details.

![](/static/figma-plugin-stark-2.png)

## Similayer - Selecting similar layers all at once

![](/static/figma-plugin-similayer.png)

As you can tell from the name, [Similayer](https://www.figma.com/c/plugin/735733267883397781/Similayer) allows you to select all layers that share the same properties. I found it extremely useful when you have created a bunch of components and want to edit some of the instances. All the properties from the design panel can be used as select criteria.

## Conclusion: Just the beginning

These 4 plugins that I recommend are highlights that can speed up your design workflow. I hope you found this helpful, I have [shared the Figma project](https://www.figma.com/file/QoxMxPy8PgyYFssbenT7Gx/Demo?node-id=12%3A1) if you need it for references.

During my selection process, I skipped some popular ones (Like [Unsplash](https://www.figma.com/c/plugin/738454987945972471), [Mapsicle](https://www.figma.com/c/plugin/736458162635847353) and [Autoflow](https://www.figma.com/c/plugin/733902567457592893) and those from big design teams ( Did you know [Microsoft Design team](https://www.figma.com/c/org/588096576863690753) has already published 5 plugins!).

Opening up third party developer support surely will speed up the maturity of the platform. I have no regret switching over from Sketch in first place.
]]></description>
            <link>https://desktopofsamuel.com/thanks-to-figma-plugins-automated-work-spares-more-time-for-design</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/thanks-to-figma-plugins-automated-work-spares-more-time-for-design</guid>
            <pubDate>Wed, 18 Sep 2019 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Decommission Review: My Farewell to Pixel 2 and Android]]></title>
            <description><![CDATA[
As flagship smartphones are getting more expensive, the lifespan of a smartphone is expected to be longer. We want our phones to be more durable and powerful, so to justify the price. 

Therefore, coming to a conclusion that I need to switch phones should be harder and harder. That is my intention of writing this article, this is a long term review, this is about the tipping point, that makes me want to switch my phone. I would like to call it a “Decommission Review”.

**Pixel 2**

- Developer: Google
- Released Date: Oct 19, 2017
- Purchase Date: Jan 31, 2018
- Decommission Date: Oct 10, 2019


## Brief History with Android

To begin with, I have switched to Android 2 years ago. Pixel 2 was the second Android phone I have ever fully committed to use every day. Before that, I was using OnePlus 5.

My last iPhone was iPhone 6s, which I have been still using occasionally as a backup phone. The phone has battery issues (even after Apple’s battery replacement program) but it is still functioning to this day.

I believe throughout the experience of owning a consumer device, there must be a tipping point, contributing to the determination to retire a phone / buying a new one. My Pixel 2 has several defects that I cannot stand in daily usage. And I hope this will help sorting out my priorities when I make another decision next time.

## 1. Camera is good but the lens is not

This might not apply to everyone, but the cover glass of my Pixel 2 camera is totally scratched. I put my phone alone in my pocket since I have ever owned a phone. That’s why it is very weird to me. And I cannot find any cause to it, even the rear back glass is not scratched as the camera. This has been a slow problem for me to realise my photos are getting overexposed and blurry. 

![Photo quality dropped tremendously after cover glass is scratched.](/static/pixel-retire.jpg)

Although Pixel’s signature computational photo is ahead of its time (at least two years ago), such hardware defects should have been prevented. I have checked my old phones and none of them have experienced the same problem.

![The cover glass is totally damaged, resulting in blurred & overexposed photos.](/static/IMG_7838-1.jpg)

![The replacement process was easier than expected, as the cover glass is glued by double-sided tape.](/static/IMG_7846-12.jpg)

I have even tried to buy a replacement unit online, but it also ended up scratched shortly after a few weeks. After that, I decided to get a new phone.
  

## 2. More painful hardware drawback: Loosen USB-C Port

This might be a general USB-C problem, as I know some Nokia phones ports are also too loose to charge anymore and they have to buy a new one despite rest of the hardware is perfectly fine. But in my case, the port is loosened but it is only functional to charge on a flat surface, the cable would fall out as long as I put it in the pocket or in the bag. 

![Battery health dropped to 64% within 1 year](/static/pixel-battery.jpg)

As the battery wears out over time, charging with power banks was more often but I cannot charge it in the bag. It has become a vicious cycle that I plug in my phone most of the time in office.  before leaving work. According to Accubattery, I had 60% of my battery capacity left. The annoyance from the phone’s battery has become a constant worry for me, loosen USB-C port makes the situation even worse as I wouldn’t be able to charge the phone on the go.


 ## 3. OS Wide Lag

Despite the hardware issues I have encountered, the annoyance of Android is also a big drawbacks comparing to my iOS experience, as I still use my old iPhone & iPad occasionally. 

The customisation Android allowed and deep Google service integration were very appealing to me at first, however, I suffered from serious lag in daily usage, especially after the new swipe multitasking gesture implemented in Android 9 Pie. I assumed Android can run smoothly when I'm using a phone made by Google, however, this is not the case for Pixel 2. Even opening camera takes seconds  

When I use a phone made by Google, I assume it can be perfectly smooth to operate for multiple generations of OS. Comparing to iOS support of previous generations of device, the Android experience even on a Pixel device is a disappointment. My camera app took seconds to load and there was occasional freeze that is clearly obstructing my daily usage. 

 ## Looking Back and Looking Forward 
  
And this wraps up all my complaints for Pixel 2! 

>  Normal people do not upgrade their phones after a single year. Most don’t even upgrade after two years. They upgrade when their old phone breaks or gets too slow. Anyone upgrading to the iPhone XS from an iPhone 7 or older is getting a great upgrade in dozens of ways
  
<cite>John Gruber</cite>

 Tech blogger [John Gruber](https://daringfireball.net/2019/09/the_iphone_11_and_iphones_11_pro) wrote this in his review for iPhone 11. Most reviews are not comparing the new phones with those customers currently own. Instead, they point out the incremental differences between generations and users have to figure out how big the jump they can get switching to the new device. This statement is even more true to users who are switching between OS, as the matter of fact, experience of iPhone cannot be measured by hardware specification, in fact my old iPhone 6S's 2GB RAM ran smoother than Pixel 2's 4GB.
 
Therefore, I'm switching back to iPhone again. But at least now I'm' able to say I really tried Android. I'm pretty optimistic about iPhone 11 Pro being a better, stable and powerful phone than Pixel 2 even with its daunting price tag of $1199 (HKD$9899). Looking back at my record, my average phone cost per used day is around $1.28 (HKD$9.92). I need to at least use it for around 3 years in order to maintain a similar average price, which is going to be a new record. Let's see if it can survive!
]]></description>
            <link>https://desktopofsamuel.com/decommission-review-my-farewell-to-pixel-2-and-android</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/decommission-review-my-farewell-to-pixel-2-and-android</guid>
            <pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[2019 Wrapped]]></title>
            <description><![CDATA[
And a year has passed. 2019 has been quite a journey for me. I have switched to become a full-time in-house product and UI/UX designer. The depth of work and design process that I delivered was totally different. The city that I’m living in, Hong Kong, also faced tremendous suppression in the fight for justice and democracy. I’m grateful for what I have learned and become over the past year, and I hope that I can continue to reflect my journey. 

## [Blog](./blog)
This is my second year anniversary of my website went live. I have written more blog drafts but many of them were not published. Mostly viewed article is still the [Gatsby Multiple Post Types](./gatsby-website-with-multiple-post-types) tutorial, I have rewritten it again for Gatsby v2. More practical and instructive articles instead opinionated piece seems to be more SEO friendly and attract organic traffic.

Looking over this year's work, this website has updated to Gatsby v2 and all content types (Blog, Work, Photo) were switched to MDX after pouring great amount of time and effort. I'm expecting to clean up some styles and components next year.

## [Photo](./photo)
A project that I have been working on before the end of the year, is migrating my photo portfolio.

I was greatly inspired by [Paul Stamatiou](https://paulstamatiou.com/photos/)’s website, takin each journey as a set of photos and records in life. 

I was using [Cargo Collective](http://cargocollective.com/) for a few years, but the ultimate goal is to put everything on my website as well. I could be wrong this time as the process of creating new sets have become dull and less intuitive, I have to rename each photo file instead of the previous drag-and-drop uploader. I’m also worried about the Git size and build time. But there’s more headless CMS coming to support static site generator, I expect to switch when they have proper MDX support. 

Currently I simply use Gatsby Image and direct upload of all portfolio content to simplify the development work. MDX customized component allows me to manipulate photo grid layout easily and I use [react-medium-zoom](https://www.npmjs.com/package/react-medium-zoom) plugin to create a full-size Zoom In effect. 

## Best of 2019

Here are some of my favorite app and products of 2019.

[**Braun Watchface Screensaver**](https://github.com/soffes/Clock.saver?ref=desktopofsamuel) by Sam Soffes (*Mac*) - this has immediately become my default Mac screensaver. I bought a Braun wrist watch few years back online, but it stopped running every other week, so this would be a good reminder of Braun’s practical design.

[**Figma** ](https://www.figma.com)(*Web*) - Figma has become my favourite tool at work in 2019. Not only did they deliver new features quickly, catching up with other UI and prototyping tools. Figma Plugins are simply the biggest launch ever enabling new ways that designers / developers to get involved in making the tool better. I [wrote an article](https://desktopofsamuel.com/thanks-to-figma-plugins-automated-work-spares-more-time-for-design) explaining how plugins speed up design workflow. Read it here. 

[**Bear**](https://bear.app/) (*MacOS, iOS*) - While I think 2019 has been a year of exploring new tools, I have been going over trying out Notion, Microsoft Todo and other productivity tools. 2020 should be a year of establishing system.

>Goals are about the results you want to achieve. Systems are about the processes that lead to those results.
<cite>Atomic Habit by James Clear</cite>

I’m sticking with Evernote and Bear right now, yet I feel Google Sheets has been the most powerful yet underrated one in tracking, providing insights and with customisation. Writing more on this matter later.

Goodbye 2019, Hello 2020.
]]></description>
            <link>https://desktopofsamuel.com/2019-wrapped</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/2019-wrapped</guid>
            <pubDate>Tue, 07 Jan 2020 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How to Organise Design Workflow and Operation in Figma]]></title>
            <description><![CDATA[
Most people kickstart their project with a blank artboard or template. It is the obvious way to get started. However, user-interface designs tend to be more complicated than just a few pages.

How should we approach to organise our screens, when there are 10+, 100+, or even 1000+ screens? And does the file structure cope with the development workflow? Here's my struggles & takeaways in organizing Figma.

# Before We Get Started

I work at a [travel-tech startup](https://www.hyperair.com) right now, and we work on App and Website. Being the principal designer, I have initially organised all our screens and design in 4 files, Tokens, App, Website and Ops.

1. **Tokens** - It contains all essential elements of design in the company, including typography, color palette, logos, graphic assets. I consider this file as the on-boarding walk-through for new hires. Since Figma has no limit on viewer accounts, even non-technical personnel can access the company’s design token. We also use [Zeroheight](https://zeroheight.com/055c0944d/p/68b40e) to publish our design assets.
2. **App** - All app screens since ideation are placed here. Major pages include Sprint, Master, Archive. We create a new page for each sprint in order to review working items together. Launched screens will be consolidated to the master page.
3. **Web** - All website screens are stored separately in another file. Same as the app file, major pages are Sprint, Master, Archive.
4. **Ops** - All in-app editorial assets, banners, and social media graphics are also created in Figma. Major pages are divided according to the channels, like Landing Banners, Campaign, Website Assets, Instagram.

# 5 Tips Mastering Your Figma Files Organisation

## 1. Think About File Structure You Really Need

Before we get started, let’s learn about Figma’s file structure.

![Figma Structure Photo](/static/figma-design-workflow-1.png)

We are only working on 1 single product right now and I think separating screens in files would be sufficient enough. **Having a precise definition on organising design screens is essential**, so everyone can follow the same logic. In my case, 5 files are clearly defined according to their purposes, there are no edge cases to worry about.

## 2. Keep It As Simple As Possible

I used to create a new Page when a new development sprint kickstart, the biggest advantage of creating a "Sprint" Page is being able to review and work together, “Sprint” in App & Web page. However, As time goes by, I was too not hard-working enough to consolidate shipped design in a Master list. It is harder to locate old design and ideas, because features are breaking down and revised across different sprints. Sketched ideas and shipped designs are also mixed in the sea of screens as well.

To make it even simpler, I decided to consolidate all my past designs in a “Master” Page, unused designs are put in an “Archive” Page, and those designs in current sprint will simply be “Work In Progress” Page. **Setting this up has forced myself to clean up “Work In Progress” when each sprint ends, consolidate all designs before the next sprint.**

In the case of tracking old design for archival purpose, here’s a pro tip:

![Name Version History In Figma](/static/figma-design-workflow-2.png)


<Alert status="info"><AlertIcon /><AlertDescription>For Team Plan, there is unlimited version history, You can name a specific version according to your sprint name, so you can easily track your old design. For Free Plan, Version history is limited to 30 days. You can also duplicate your project and name it accordingly. Or you just keep a detailed changelog separately like <a href="https://keepachangelog.com/en/1.0.0/" target="_blank">Keep A Changelog</a></AlertDescription></Alert>

## 3. Organise Your Frames

One of the feedback I received from my co-workers is that it’s hard to browse through Figma as there are too many artboards and pages. But I had quite the opposite opinion thinking it's the best tool I have ever used to collaborate on. So I started to reflect on why would non-technical people feel frustrated browsing my files.

Figma is too flexible that my pages were so messy with designs lying all around. Incorporated from the philosophy of traditional design software, like Adobe Photoshop and Illustrators, only those within frames matters. It would make total sense keeping those relevant unused artworks within reach outside your artboard.

But when we started to collaborate, more people are at stake. Becoming the best organised version of ourselves is required to make it work. Therefore, I started to nest screens within a bigger frame, with proper title and user story.
But then I realised Figma actually does not recommend to do so. **For us to consider a Frame as a Top-level Frame, you must not nest it within another Frame or object.”** ([Using Figma](https://help.figma.com/hc/en-us/articles/360041539473-Frames-in-Figma)). So I have created a component to things easier.

![Organise Your Frames with a Indication Component](/static/figma-design-workflow-3.png)

<Alert status="info"><AlertIcon/><AlertDescription>  Create a resizable component to indicate each user story / feature, with all essential information. Title, JIRA story code, description. Then you can create different state using “Component Name / State”, so users can easily switch states, like “Developer Handoff / In Review / Deployed” </AlertDescription></Alert>

## 4. Type out your thought with annotations

Not everyone understands your intent and not everyone can spot small changes you made to the previous design. So type out your thought with annotations. Mark up changes that people would miss and make it readable.

Use [Redlines](https://www.figma.com/c/plugin/781354942292031141/Redlines) to annotate measurements that you want to highlight. There’s also a [Figma Redline Components](https://www.figma.com/resources/assets/figma-redlines/) that can make your annotations stand out.

## 5. Thumbnails Are Customisable, Make It Pretty!

![Customise Figma thumbnail create more context for users](/static/figma-design-workflow-4.png)

Finally, a cosmetic solution to make your Figma more tidy and visually pleasing. Previous Figma only use the first page as a default thumbnail. Did you know you can now [customise any frame as thumbnail](https://help.figma.com/hc/en-us/articles/360038511413-Set-a-Custom-Thumbnail) ?

**How to create custom thumbnail for Figma?**

1. The revamped thumbnail does not have a fixed resolution as it is fluid across screen sizes. First, create a page and named it "Cover"
2. Draw a 500x270px Frame. I found this size works great for both Desktop and Laptop.
3. Let your creativity flow and make it pretty. The thumbnail template I created includes 1) Title, 2) Short description, and 3) An icon using [Font Awesome font](https://fontawesome.com/download) that I can type out an icon.
4. Right click the frame and set as Thumbnail. You can also create it as a component and share it across your files.

![Right Click on Frame to Select Figma Project Thumbnail](/static/figma-design-workflow-5.png)

# Outro

That’s it. Heres my 5 tips to organise my design workflow. My biggest lesson is learning not to make things too complicated. Yes, it is always possible to create a complicated system that is perfect but in a world that is moving quickly, that amount of work might not be justified at all.

> We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%.

<cite>Donald Knuth</cite>

This article, [Keeping files organized for your team,](https://www.figma.com/best-practices/guide-to-developer-handoff/file-organization/) from official Figma is also a great resource. If you have any other ideas to organise your Figma, please share with me on [Twitter](https://www.twitter.com/desktopofsamuel)!
]]></description>
            <link>https://desktopofsamuel.com/how-to-organise-design-workflow-and-operation-in-figma</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/how-to-organise-design-workflow-and-operation-in-figma</guid>
            <pubDate>Sat, 08 Feb 2020 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Documentaries watched, 2020 Jan — Mar Edition]]></title>
            <description><![CDATA[
{/*
import Film from "@/components/Film";
import HelveticaPoster from "/static/helvetica-poster.jpeg";
import FreeSoloPoster2 from "/static/freesolo-poster.jpg";
import RamsPoster from "/static/rams-poster.png";
import ObjectifiedPoster from "/static/objectified-poster.jpg";
import AmericanFactoryPoster from "/static/amercian-factory-poster.jpg"
*/}


One of my year resolution over the last couple of years was to watch more documentaries. Why? Documentaries are fun and informative, it’s a standard medium where creativity and unique style can make a huge difference.

Best of documentaries is the attention lifespan it required, is so little compared to finishing a book. Watch documentaries was a process to me feeding new knowledge around the world, and after that, I would dig deeper and read on the topics that I’m interested in.

Here is a list of documentaries I’ve watched this quarter.

{/* <Film poster={FreeSoloPoster2} title="Free Solo" year="2019" director="Jimmy Chin, Elizabeth Chai Vasarhelyi" rating="★★★★★"/> */}

## Free Solo

Almost forgot how good it was to watch a great documentary. Free Solo is more than a sports doc, the film is meta in a way that filming process with drones and crews posed pressure on Alex’s climbing attempt. Alex Honnold, is a professional rock climber attempt to climb El Cap without any rope at Yosemite National Park. The film is incredibly frank on this subject matter.

![Free Solo by Jimmy Chin, Elizabeth Chai Vasarhelyi](/static/free_solo.jpg)

## American Factory

{/* <Film poster={AmericanFactoryPoster} title="American Factory" year="2019" director="Julia Reichert, Steven Bognar" rating="★★★★½"/> */}

Watched just right before the Oscars when the film was awarded Best Documentary Feature. The film offered a down-to-earth insight into the dynamics between Chinese and Americans is the best part of it. It gets political as expected regarding the labor union dispute.

But the most part of the film is about the daily lives of workers in Fuyao. The Chinese corporate visioned to expand in America, where they transition a closed GM plant into a glass manufacturing factory. Two groups of people with distinctive cultures, languages and their backstories working together under the same roof.

Remember to watch the [additional video](https://www.netflix.com/title/81176188) the directors talking to the Obamas (producer of the film).

![American Factory by Julia Reichert, Steven Bognar](/static/american_factory.jpg)

## Rams

{/* <Film poster={RamsPoster} title="Rams" year="2018" director="Gary Hustwit" rating="★★★★"/> */}

The film was on my watchlist for months but what a coincidence that a week after watching this film, it has come to my knowledge that director Gary Hustwit [made his films available for free, week by week](https://www.ohyouprettythings.com/free) during the Coronavirus outbreak. Making a majority of my film record these months are all his work.

Rams took a deep dive into Dieter Rams’ life and work in Braun and Vitsœ, who is a key design figure in influencing modern industrial design. Previously interviewed in Objectified (2009). The film is certainly more in-depth and focused on Dieter’s design philosophy.

![Rams by Gary Hustwit ](/static/rams.jpg)

## Helvetica

{/* <Film poster={HelveticaPoster} title="Helvetica" year="2007" director="Gary Hustwit" rating="★★★★"/> */}

Helvetica was also a documentary I meant to watch for a long time. I believe it is one of the first documentary feature focusing on one, single font. But there is no better font like Helvetica, in terms of its popularity, cultural impact if you need to choose a font to make a film. The neutral nature of the font style has made it so successful but also ubiquitous. Until someone points it out for you, “That font is actually Helvetica”.

![Helvetica by Gary Hustwit](/static/helvetica.jpg)

## Objectified

{/* <Film poster={ObjectifiedPoster} title="Objectified" year="2009" director="Gary Hustwit" rating="★★★½"/> */}

Another work by Gary Hustwit. The film explored the relationship between designers and their work in making objects. How objects become products and then become a part of our everyday life. However, the film was focused on the creative process of the makers. That’s where I felt the film was inadequate. It barely touched on the relationship between objects with its users, how people use products out of designers’ expectations or how bad design could affect our lives. I personally think that was a tipping point why I feel good design worths and deserve to be treasured.

![Objectified by Gary Hustwit](/static/objectified.jpg)

—

That’s it. Here’s my round-up of the documentaries I watched so far this year. I just started this habit in reflecting on the films I watched. If you are even more interested, my movie diary is also available to view on [Letterboxd.com](https://letterboxd.com/samuelisme/).
]]></description>
            <link>https://desktopofsamuel.com/documentaries-watched-2020-jan-mar-edition</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/documentaries-watched-2020-jan-mar-edition</guid>
            <pubDate>Sun, 05 Apr 2020 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Takeaways from building a COVID-19 curatorial side project]]></title>
            <description><![CDATA[
A month ago, when [#StayAtHome concert](https://tgtathome.club/category/music/) started, generous companies and creators follow the trend by offering their work and service for free to encourage people to stay at home. People started collecting and sharing what they could do at home in a text list. When more people started to share their work for free, with emerging apps, movies and games were made available for free. Then, an idea of putting all available content and service has come to mind.

For side projects like this, you should always experiment using the tools that you are the most familiar with. In my case is [GatsbyJS](https://www.gatsbyjs.com/), which also was used on my [website and blog](/), I quickly adapted the starter template and created [“Together At Home Club”](http://tgtathome.club/?utm_source=medium&utm_medium=blog&utm_campaign=launch) in a night. The site has been running for 1 month, Here are my takeaways.

![Before and After using [Gatsby Starter Lumen](https://www.gatsbyjs.org/starters/alxshelepenok/gatsby-starter-lumen/)](/static/TgtAtHome-Behind-1.png)

## Keep The Design Minimal and Informative

![View the [original design draft on Figma](https://www.figma.com/file/bDL1o713kTHgopoXB0eA62/Together-At-Home?node-id=0%3A1)](/static/covid-figma-desktop.jpg)

Using GatsbyJS, each entry is actually a Markdown file in my source repo uploaded via Git. Keeping the information architecture simple is essential, main layout would be all the resources that I have gathered, and sidebar would be supplementary information and navigation. I simplified the [template layout](https://www.gatsbyjs.org/starters/alxshelepenok/gatsby-starter-lumen/) so clicking on each card will point to the designated hyperlink of the resources directly. So everything is based on one single page only.

After applying the core brand style to the site, my next objective is to keep the card design as informative as possible. Limited-time offers will include a deadline right next to the View More button. So it would be more timed even the offer has expired. Categories will be linked to a detailed category page if visitors are interested in a specific category. You can also view the original [design draft](https://www.figma.com/file/bDL1o713kTHgopoXB0eA62/Together-At-Home?node-id=0%3A1) of the project on Figma.

## Gatsby RSS Plugin + IFTTT = Automated Twitter

Keeping minimal effort and focusing on your energy on the right task is also my lesson here. In the beginning, I doubted a separate [Twitter account](https://www.twitter.com/tgtathomeclub) is necessary. Because there’s little time to maintain the content as well as social media. However, Gatsby comes with RSS plugin, [gatsby-plugin-feed](https://www.gatsbyjs.org/packages/gatsby-plugin-feed/), using it together with IFTTT, by setting a recipe to send a tweet whenever RSS feed updates. This automation setup has saved me additional time on a duplicated task. I can even set up a template hashtag to be added at the end of every tweet.

![IFTTT Recipe setup for [@tgtathomeclub](https://www.twitter.com/tgtathomeclub)](/static/ifttt-twitter.png)

## Initial Traction Was Great, But That Was It.

For launching, the major response came from a Reddit post I have posted on [r/SideProjects](https://www.reddit.com/r/SideProject/comments/flqtaf/a_website_collects_all_free_online_courses_music/). Then, I have also posted to more subreddits like [r/Free ](https://www.reddit.com/r/FREE/comments/g8caiv/collection_of_free_services_apps_films_and_games/)and [r/IMadeThis](https://www.reddit.com/r/IMadeThis/comments/fnvynq/together_at_home_club_a_website_collects_all_free/). I have also shared on my personal Facebook and Twitter.

![Acquisition of Source/ Medium on Google Analytics](/static/ga-acquisition.png)

Setting up UTM parameters properly using tools like [Campaign URL builder ](https://ga-dev-tools.appspot.com/campaign-url-builder/)allows me to track which particular thread brings in traffic to the website. However, traffic has dropped gradually after the course of a month.

![Audience Overview in Google Analytics, Traffic of the website dropped significantly a week after launch](/static/ga-traffic.png)

## Keep The Cost As Low As Possible

You would never know how long the project would last, and for most of the cases, all the costs would come from your own pocket.I have managed to keep the cost to minimal so far. [Netlify’s free tier plan](https://www.netlify.com/pricing/) with 10GB traffic is more than enough for the site to kickstart. However, build time is limited to 300 minutes, which are shared over all my websites.

Current spending only includes $7 of extra build time I need on Netlify and $9 for purchasing the domain ([https://tgtathome.club](http://tgtathome.club/?utm_source=medium&utm_medium=article&utm_campaign=may)). Therefore, no matter how great those business or pro plans are pitched, you should always opt for free solutions in the beginning.

## Looking At The Alternatives

Of course, I am not the only one doing a curatorial list for free resources. After launch, I have dug up some competitions for my reference. It may not appear in exactly the same format, but the same problem they are trying to resolve.

In my findings, some similar website are focusing on a specific group of target audiences (e.g. parents, creatives, startups, etc), created also by hobbyists like me.

- [saasforcovid.com](https://saasforcovid.com/)
- [learn-from-home.herokuapp.com](https://learn-from-home.herokuapp.com/index.html)
- [phlearn.com](https://phlearn.com/resources)


But the real giants here, are actually news outlets, content farms, and different institutions across industries. They have full-time staff to work on articles on the same subject matter. From the perspective of SEO, they have a much higher domain authority and traffic, and they have dominated the related results in keywords like “Free Stuff”, “COVID-19”.That’s when I know it may not go as big as I thought it could.

## The Hardest Part: Keeping Up The Content

With all the excitement, I put up dozens of FREE resources every day I can find to the website manually.

After that, I have set up [Netlify CMS](https://www.netlifycms.org/) to simplify my workflow. I was hoping Netlify CMS was my answer to support guest submission and replace my [Google Form](https://forms.gle/B6yXL7xEUSKTnLY98). However, current version of Netlify CMS has limited configuration settings. It does not support guest posting on a specific content type, and visitors would still need to register before submitting any information. I regard this as a step back and therefore I didn't implement it.

![Screenshot of Netlify CMS](/static/netlify-cms.png)

So far, I have received 10 suggested content from Google Forms feedback and I have inputted 40+ resources all by myself while [saasforcovid.com](https://saasforcovid.com/) has 250+ resources collectively input on a [Google Sheet](https://docs.google.com/spreadsheets/d/1QdMr6TYlPLgc8nip165CyuDrr5WPcxnzqxJBJK_EfJ0/edit#gid=0), which has made me started to think if I have got off the wrong foot. Making things more simple like a collaborated Google Sheets may also be sufficient.

## Keep Calm and Carry On

The essence of curatorial site is the **unique way of thinking or approach putting up resources together for the ill-informed target audience**. In my reflection of this project, time was the advantage I had, which information spread so quickly my target audience is no longer ill-informed.

Framing your project and state your premises will help you to ponder what went wrong and how can you make it better next time. I’m writing this piece just as a reminder for myself. I am still inputting new content (but not as often) to the site since worldwide lockdown still happening right now. Welcome to [message me](https://twitter.com/@desktopofsamuel) about your suggestions or let me know if there are any free resources you discovered.]]></description>
            <link>https://desktopofsamuel.com/takeaways-from-building-a-covid-19-curatorial-side-project</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/takeaways-from-building-a-covid-19-curatorial-side-project</guid>
            <pubDate>Thu, 30 Apr 2020 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Defining Personal Style for Your Blog & Website]]></title>
            <description><![CDATA[
After settling down for the basic functionality of a website, its time to dig deeper and let some personality shines! We want your website to speak who you are, so enjoy the freedom of building anything possible, as it is one of the advantages of building your own website.

However, personal style does not just drop in one day. In fact, many designers have been developing styles for clients or companies, they may not have a clear answer.

I also had a long thought on this and **I have put together a list of small changes that you can work on in order to discover your style**. Most of my suggestions can be applied on  blogging platform like Wordpress and Tumblr, as long as CSS can be customized. In my case, I'm using Gatsby and MDX, therefore I own more control over the visual style and integration between design and content.

I believe building a website is a continuous process and for myself, so none of these were designed in the first place when I first launched my website.

For Gatsby users, I have simply applied my styles by injecting CSS globally or referenced in a layout component file. Additional customized components are in my components folder. I am looking to share all the styles across my whole website, so I did not implement my style specifically in `MDXProvider` as some tutorials did.

## 1.  Ordered and Unordered List

If you use lists in your blog all the time, you should definitely style your lists, all you need is CSS. Reset your style first by clearing all the margins and padding. Follow [Josh Comeau](https://joshwcomeau.com/css/styling-ordered-lists-with-css-counters/) to style your own ordered list. 

```css
ul li {
  list-style-type: none;
  margin: 0px;
  padding: 0px;
}
```

You can replace the default bullet point by assigning an image or character. 

```css
ul li:before { 
  content: '\1f852';
  list-style-position: outside;
  }
```

The content property refers to the Unicode of the special character. Feel free to check all options [here](http://xahlee.info/comp/unicode_arrows.html). 

For ordered list style, I have realized Josh's way of using `counter-rest: variable` is not compatible when the list span through other elements (separated by a code block or image). But there's a new standard coming, a new pseudo-class `::marker` is experimenting right now(which is not turned on by default by Chrome). You just need to make sure it fallback on non-compatible devices.

```css
ol li::marker {
  font-family: var(--font-primary);
  font-weight: var(--font-weight-bold);
  color: var(--color-primary-light-700);
  font-style: italic;
}
``` 

## 2. Blockquote

Quoting from other people is a terrific way of getting backlinks and bringing more authenticity to your writing. I also use blockquote to emphasize the key messages in my writing.

![](/static/personal-blog-blockquote.png)

 A typical approach to style your blockquote would be using a different font and much larger text size. I also use the quotation mark for indication. Once again, you can use pseudo-elements `:before` for adding the quotation mark before the quote begins.

```css
blockquote:before {
  content: "\201C";
  position: absolute;
  top: -20px;
  left: 0;
  width: 3rem;
  height: 3rem;
  font: 8rem "PT Sans", sans-serif;
  color: var(--color-primary-light-700);
}
```

Remember to set `position:relative` to the parent element so the absolute position could be fixed. In case you want to add the source of quote, an HTML element called `<cite>` can also added after the end of blockquote. However, Markdown does not support cite directly, so you have to type the markup by yourself.

```markdown
> We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%.
<cite>Donald Knuth</cite>
```

## 3. Strong & Link Style

Highlighting important statement in your writing or your conclusion help to guide your readers. In CSS, bolded sentence can also be tweaked in style, by adding more fun and grabbing the attention to it.

In Markdown, `**Bold Style**` would translate into `<strong>` in HTML. Then we could style the selector in CSS. Like this animated underline on [Codepen](https://codepen.io/Varo/pen/jOOaLLG), you can easily turn it into a highlight. 

For example: **premature optimization is the root of all evil.**

In most cases, external hyperlinks on your site would be styled already. Please keep in mind links and highlight should be separated, so readers will able to distinguish which one is clickable and which one isn't.

## 4. Custom Components

This is the part where Gatsby excels at. Being able to build custom components meaning you have unlimited possibilities in displaying your content. 

For starter, a Tip component would be an easy start making your article richer. You would be able to separate additional information with your writing.

```javascript
import React from "react";
import styled from "styled-components";

const Wrapper = styled.div`
  background-color: var(--color-primary-background);
  border-left: 4px solid var(--color-primary-light-700);
  padding: 1rem;
  border-radius: var(--border-radius);
`;

const Title = styled.p`
  font-family: var(--font-primary);
  font-weight: var(--font-weight-bold);
  display: inline;
  margin-right: 8px;
`;

const Tip = ({ children, className }) => (
  <Wrapper className={className}>
    <Title>Tip:</Title>
    {children}
  </Wrapper>
);

export default Tip;

```

Then in your markdown, remember to import Tip component. Then wrap Tip around the paragraph.

```javascript

import Tip from "components/Tip"

<Tip>Tip Content</Tip>

```

![](/static/personal-blog-tip.png)

{/* import Tip from "components/Tip"

<Tip>This is a tip to demonstrate custom component. It's extremely useful to put additional knowledge to the writing or to remind readers about new update </Tip> */}

I have also created a Film component for my quarterly documentary review blogs. These two are just the most simple component you can tailor for your own need. Imagine adding support for affiliate links, GPS, maps and more! 

![Film component used on desktopofsamuel.com](/static/personal-blog-film.png)

That's it. Here's an example of a custom component that I would love to try someday.
This is a map module from [Paul Stamatiou](https://paulstamatiou.com/photos/africa/rwanda/)'s photo journal'.

![](https://media.giphy.com/media/d9BtFFG1nmm2T62usW/giphy.gif)

If you have more ideas or good inspirations in mind please feel free to share with me. 
]]></description>
            <link>https://desktopofsamuel.com/defining-personal-style-for-your-blog-website</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/defining-personal-style-for-your-blog-website</guid>
            <pubDate>Fri, 03 Jul 2020 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Documentaries watched, 2020 Apr — Jun Edition]]></title>
            <description><![CDATA[
{/* 
import Film from "components/Film";
import WorkplacePoster from "./workplace.png";
import CubaAndTheCameramanPoster from "./cubaandthecameraman.jpg";
import UrbanisedPoster from "./urbanised.jpg";
import BambooTheatrePoster from "./bambootheatre.jpg";
import ThirdteenthPoster from "./13th.jpg"
*/}


{/* <Film poster={WorkplacePoster} title="Workspace" year="2014" director="Gary Hustwitt" rating="★★★★"/> */}

## Workplace

I have almost forgot, architecture, from physical, monumental structure to the details of space, is still an integral part of design discipline. The film went through history to see the evolution of workplace, which is a product of human evolution in the last 100 years only. Remote-work and Work-from-home culture that COVID-19 led of course is a new addition to this topic today.  

## Cuba And The Cameraman

{/* <Film poster={CubaAndTheCameramanPoster} title="Cuba and The Cameraman" year="2017" director="Jon Alpert" rating="★★★½"/> */}

Havana has always been on my city wishlist to visit. But behind the facade of vintage cars and cityscape frozen in time, the capitalist tourism boom in the last decade has so much more story to tell. Director Jon Alpert visited Cuba and interviewed Fidel Castro in the 70s, the visit has further developed into a moving visual record of Cuban history. 

Over the course of 45 years, he returned to the country every few years, and visited families he met since the first time. The film started from the optimism on Castro’s vision and leadership, then struggles on everyday life after the fall of Soviet Union and now the well being after the heavy reliance on tourism. Families welcomed new life as well as farewell.

## Bamboo Theatre

{/* <Film poster={BambooTheatrePoster} title="Bamboo Theatre" year="2020" director="Cheuk Cheung" rating="★★★"/> */}

The film is very focused on capturing the craftmanship and professionalism of bamboo theatre, maybe it is even too focused. It captures bamboo theatre in a static way, offering a glipse to the "life and death" cycle of the theatre, construction, setup, the show and deconstruction. The film has reminded me of the work of Sergei Loznitsa, show but not tell, in an aesthtic way to capture without much explanation to things happened on screen. 

It may not be an introduction material to the Canontese Opera culture, since the director managed to separate two things, with little canton opera left but inserting classical music from Bach. It managed to ritualize the work of the construction workers and troupe, making this temporal nature of bamboo theatre, happening for a week once a year in different neighbourhoods in Hong Kong, a special tradition to be remembered. 

I’m dedicating June’s documentary slot to learn more about the history of US and support #BLM.

## Thirdteenth 

{/* <Film poster={ThirdteenthPoster} title="13th" year="2016" director="Ava DuVernay" rating="★★★"/> */}

There is a lot to process after watching 13th, the film explained mass incarceration is an institutional problem instead of a phenomenon. More colored people served jail time is not a proof but an end result of a problem. From one loophole from constitution of America, it has become a institutional problem that is too big yet to eradicate.
]]></description>
            <link>https://desktopofsamuel.com/documentaries-watched-2020-apr-jun-edition</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/documentaries-watched-2020-apr-jun-edition</guid>
            <pubDate>Sat, 18 Jul 2020 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How to Create a Scroll Tracking Table of Content in Gatsby?]]></title>
            <description><![CDATA[
Have you visited some documentation and tutorial sites, that allow you to see which section are you reading on the side? If you want to improve the readability of your Gatsby website. In this article, I will share my process in creating an interactive table of content component that can respond to your scrolling. 

Let's take a look at the requirement:
1. Reader will be able to navigate section of content easily 
2. Reader will be able to know their reading progress

We will be using a package called `react-scrollspy` to detect if the headings are in viewport, which will trigger an active class name in return. 

By including a Table of Content component, users will be able to navigate within your article easily, finding the content they are interested. Let's get started and skip to step 2 if you have a Gatsby site already.


## 1. Create a Gatsby Site
We will install a simple MDX starter at the beginning

```
gatsby new gatsby-tutorial-table-of-content https://github.com/hagnerd/gatsby-starter-blog-mdx
```

Use `yarn` or `npm install` to initialise the repository. 

## 2. Install react-scrollspy & gatsby-remark-autolink-headers
Taking a look at `react-scrollspy`, we will need to provide the headings for each page to the component, which luckily generated automatically by default in each post node. We will also need to state the class name to activate when in view. 

```
yarn add react-scrollspy gatsby-remark-autolink-headers
```

In `gatsby-config.js`, you will need to add `gatsby-remark-autolink-headers` within the `gatsbyRemarkPlugins`.

![Install Gatsby Remark Autolink Headers](/static/20201211-autolink.png)

## 3. Update Post GraphQL Query

![Query TableOfContents in your blog post template GraphQL query](/static/20201211-toc-tutorial-graphql-query.png)

Include `tableOfContents` in your blog post template GraphQL query, in my case it's `blog-post.js` in templates folder. After that, if you use GraphiQL, you should be able to see table of contents return as an object. We will call all the `url` value in the object and return as an array.

![](/static/20201211-toc-tutorial-graphiql-check.png)

## 4. Passing Post Props to Toc component
Create a new file called `Toc.js` in Components folder. We will be adding function step by step to isolate problems that may arise. By adding a very simple component, we need to make sure all the props will be passed through first. 

```js
import React from 'react'

export default function Toc(props) {
  const { post } = props
  console.log(post)

  return <h3>Table of Content</h3>
}
```

Save file and back to `blog-post.js`and import Toc component.
```js
import Toc from '../components/toc'
```

Then I will add Toc just before the MDXRenderer.
```js
<Toc post={post.tableOfContents} />
<MDXRenderer>{post.body}</MDXRenderer>
```
For now, only the Table of Content h3 title will be displayed. But in console, as we logged the post props. We can also check if the objects of `tableOfContents` are returning.
![Console Log](/static/20201211-toc-consolelog.png)

## 5. Mapping Table of Content Props

For a simpler demo, we will be only listing all first-level heading in the Table of Content. Let's update `toc.js` by mapping the props value. By doing so, we would be able to access all the headings information and link from `tableofContents`from GraphQL.

```js
return (
	<nav>
		{post.items.map(p => (
			<li key={p.url}>
				<a href={p.url}>{p.title}</a>
			</li>
		))}
</nav>
  )
```

Since we have installed `gatsby-remark-autolink-headers`to add anchor automatically for each heading. Clicking on the Table of Content would redirect to the heading immediately.

![](/static/20201211-toc-heading.png)

## 6. Styling Table of Content Component on the side
Now basic functionality has been completed, let's take care of the styling first show we can test the scrolling easier. Here I will be using the simplest implementation using CSS. But any style implementation should work just fine.

Let's create a `Toc.css`in the same folder and import it in the component.
```
import './Toc.css'
```

We will make the Table of Content fixed on the right side of the window, so users can navigate easily no matter which part of the page they are. Also, since we do not want to alter normal list style. We will be specifying a class name `.toc-list`, which will be added in the next step.

![Styled Table of Content Fixed on the right window](/static/20201211-toc-styled.png)

We will be also adding a `is-current`class so Scrollspy would able to add the class name when the heading is in view.

```css
nav {
  position: fixed;
  top: 50vh;
  right: 5vw;
  margin-left: 36px;
  max-width: 250px;
}

ul.toc-list {
  border-left: 1px solid #363636;
}

ul.toc-list > li {
  list-style-type: none;
  margin-left: 24px;
  font-size: 13px;
}

ul.toc-list > li > a {
  color: #c2c2c2;
  text-decoration: none;
  border-bottom: 0;
  transition: 1s all ease-in-out;
}

ul.toc-list > li.is-current > a {
  color: black;
}

/* Hide Table of Content when screen is smaller than 1440px */
@media only screen and (max-width: 1439px) {
  nav {
    display: none;
  }
}
 ```

 ## 7. Implement React Scrollspy
 Last but not least, we will need to detect if the heading is in view. `react-scrollspy`will help us to identify if the anchor is in view after we pass through 2 things.
 1. List of anchor URL link as an array
 2. Class name when the heading is in view

It took some time for investigation, but since Gatsby `tableofContents`conveniently added anchor already, we actually need to remove the `#` from the provided object. Here's a simple function to call `url`value in the object and remove the first character.

```js
  let url = post.items.map(function(post) {
    return post['url'].substring(1)
  })
  ```
  
  After that let's import Scrollspy right after the `nav` and pass the `url` and add the current class name:
  
  ```js
   <Scrollspy items={url} currentClassName="is-current" className="toc-list">
        {post.items.map(p => (
          <li key={p.url}>
            <a href={p.url}>{p.title}</a>
          </li>
        ))}
      </Scrollspy>
  ```
  
  The final file for `Toc.js`should look like this
  ```js
  import React from 'react'
import Scrollspy from 'react-scrollspy'
import './Toc.css'

export default function Toc(props) {
  const { post } = props
  let url = post.items.map(function(post) {
    return post['url'].substring(1)
  })

  return (
    <nav>
      <Scrollspy items={url} currentClassName="is-current" className="toc-list">
        {post.items.map(p => (
          <li key={p.url}>
            <a href={p.url}>{p.title}</a>
          </li>
        ))}
      </Scrollspy>
    </nav>
  )
}
  
  ```
 
 
 That's it. I have created a [minimal repo](https://github.com/desktopofsamuel/gatsby-tutorial-table-of-content) using [Gatsby Starter Blog MDX](https://github.com/hagnerd/gatsby-starter-blog-mdx). Feel free to reference it and raise any issues on [Github](https://github.com/desktopofsamuel/gatsby-tutorial-table-of-content). You can also [preview the demo here](https://gatsbytutorialtableofcontent.gtsb.io/). 
 
 ![](/static/20201211-TOC-Final.gif)
 
 Here are some of the errors and questions I faced when developing the Table of Content component using Gatsby.
 
 ## How to conditional render when there are no headings at all?
 
 At this time, if you have a blog post without any heading. You will encounter into error. We will need to add conditional render to the Table of Content only when it is available to the post template.
 
 ```js
/*blog-post.js*/
  {!!post.tableOfContents.items && <Toc post={post.tableOfContents} />}
 ```
 
 
 ## How to debug all the error using Gatsby Build?
 If you have a lot of blog post, you will not be able to test everyone by yourself. If you have been using `gatsby develop` to test the Table of Content component. I highly recommend you to use `gatsby build`to test all blog posts before commit. Making sure there is no error in the blog post. I managed to find some blog post without any headings and one blog post that had a wrong heading hierarchy (h3 before h2) which resulted in build error.
 
##  How to remove icon next to the headings?
The plugin in `gatsby-remark-autolink-headers`add an icon before each headings that it process. According to the documentation, make `icon: false` under plugin options will remove the icons before anchor headings.

```js
/*gatsby-config.js*/

{
	resolve: `gatsby-remark-autolink-headers`,
   	options: {
    	icon: false,
    	},
   	},
```
 
 ## How to make scroll smooth?
Install `smooth-scroll` add the following code to `Layout.js` or anywhere that will be loaded on every page.

```js
    if (typeof window !== 'undefined') {
      // eslint-disable-next-line global-require
      require('smooth-scroll')('a[href*="#"]')
    }
```
 
## What next? 
There are still some problems with existing solutions. Like `react-scrollspy` only recognizes the heading instead of the heading + following paragraphs. So long article may experience  (Heading 1 In View -> Out of View -> Heading 2 In View) such problem.

Also, only first-level heading is rendered currently. Putting a loop would also be the next step in making the table of content better. 

Last but not least, mobile display is also worth working on, currently, the table of content would not be rendered in mobile as a majority of my reader come from desktop. But implementing a floating button with pop-up menu would also be a feasible solution. ]]></description>
            <link>https://desktopofsamuel.com/how-to-create-a-scroll-tracking-table-of-content-in-gatsby</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/how-to-create-a-scroll-tracking-table-of-content-in-gatsby</guid>
            <pubDate>Thu, 17 Dec 2020 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[A Journey of Computer Setup]]></title>
            <description><![CDATA[
Finally I have completed a PC build upgrade cycle. After 5 years, every part in my PC has been replaced. In retrospective, I have to say that I enjoyed the modular design of custom-build PC, which I am able to upgrade my own parts and spread off the cost in years, but it has its drawbacks. Comparing to owning a non-upgradable Macbook, both experience are unique that I am willing to invest on both sides.

Majority of task I perform on my computer are web browsing, design (using Figma), photo editing (using Adobe Photoshop and Lightroom) and gaming. 

My previous build was a second-hand purchase from work, it was used primarily for video editing, assembled by computer store in Sham Shui Po.

```
CPU: Intel Core i5-6400 @2.70GHz
MB: Gigabyte B150M-D3H MATX
RAM: Kingston 8GB DDR4 2133MHz x 2
SSD: A-DATA SP900 256GB 2.5" SATA3 SSD
HDD: WD PURPLE 2TB 3.5" SATA3 HDD
GPU: GeForce GTX 960 GAMING 2G
Case: Cooler Master Elite 361 Computer Case MATX
PSU: Sharkoon WPM500W Bronze
```
It was a decent budget build (around $790 including assembly and OEM Windows license), I know it sounds a lot less impressive now but I have proudly finished editing work for a feature-length documentary project back then. 

And now this is my new build:

```
CPU: AMD Ryzen 5 3600 3.6-4.2GHz (2020)
MB: Asus PRIME-P/CSM X570 (2020)
RAM: Corsair Vengenance Pro RGB 2x16GB 3200mHz
SSD: Intel 660p 1TB M2 SSD + A-DATA SP900 256GB 2.5" SATA3 SSD (2019)
HDD: WD Blue 3TB 3.5" SATA3 HDD + WD Enterprise 3TB 3.5" SATA3 HDD (2017)
GPU: GeForce Zotac GTX1070 (2018)
Case: Corsair Carbide 275R Black ATX (2019)
PSU: High Power Element Bronze 500W
```

Each of the component has been replaced over the years after buying the setup. Final piece of the build was actually the CPU and motherboard, after I experienced more lag after hooking up with a additional LG 4K 27" monitor. Also, I was unable to play the new Microsoft Flight Simulator properly due to heavy CPU usage. 

## From a Consumer To a Hobbyist

Over the years, I have learn more about PC parts and DIY by following Youtube channels and catching up with some news site. But the best lesson I have learned, actually was The Verge PC Build video, which I am little late about this matter. 

<iframe width="800" height="450" src="https://www.youtube.com/embed/M-2Scfj4FZk" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

When I was picking a motherboard, future compatibility certainly crossed my mind. Would I be able to use the same motherboard when I upgrade my next CPU in 5-7 years? It didn't work the last time, as my i5-6400 use LGA1151 while the latest 10th gen Intel CPU switched to LGA1200 instead. (And Ryzen is such a great deal in terms of price and performance). But next time, there could be another game-changing standard that everyone must hold on to, new standard like PCI-Express 4.0 and DDR5 and even USB 4 is expected to roll out in upcoming years.

My conclusion, it's certainly impossible to be future proof (at least in my 5-7 years scale). So in the end I just pick an affordable and acceptable option that has leeway for upgrades that I am aware of. 

## Next Upgrade

I have written most of this article before my last purchase - RAM. I didn't expect to upgrade my RAM as it was sufficient before. However, I have learnt that memory speed does affect CPU performance in AMD and I have been suffering lag & 100% RAM usage since motherboard and CPU upgrade (also after switched  to Firefox), so I have upgraded to Corsair Vengenance Pro RGB 2x16GB 3200mHz.

Now the cycle has finally completed and it would be safe for me to say I would not in need for an upgrade at least for a few years. 


]]></description>
            <link>https://desktopofsamuel.com/a-journey-of-computer-setup</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/a-journey-of-computer-setup</guid>
            <pubDate>Sun, 27 Dec 2020 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Reflecting on 2020]]></title>
            <description><![CDATA[
{/*
import Film from "components/Film";
import FreeSoloPoster2 from "../2020-04-05 Doocumentaries Watched 2020 Q1/freesolo-poster.jpg";
import ForSamaPoster from "./For-Sama.jpg";
*/}

What a year 2020 has been. The changes and things that has happened to my personal life as well as the world is totally unimaginable. But we went through. It's presumptuous to say the worst is yet to come (at least in Hong Kong), but staying self-aware and mindful to our own targets is the way to see our own improvement over time,.

So here are some of my 2020 Goals:

##  **✅ Career Growth & Development**
In 2020, I was put on furlough for few months after the travel ban (I worked for a travel startup), I had some time to think about my career and what I want to try and accomplish in the the next few years. My conclusion was to start looking for new jobs and equip myself for the job market. 

The whole job searching journey is a big challenge for me as it has been 5+ years since my last job hunt. Finding a suitable opening positions, crafting a personalized cover letter, a resume that adequately state what I did without bragging, prepping for countless interviews happened offline or online, and most importantly a portfolio that allow people to know you who you are from your own design. Every process is hard work and I had gone over dozen of revisions to adjust and frame my store. Thankfully, the reward of such process is also out of my expectation. I'm lucky to receive 2 job offers, and I'm grateful to announce I'm starting the new role later this month! 

During the process, employing OKR (Objective & Key Result) framework to my career planning was very helpful, inspired by Sophie Li's [OKR for self learning](https://github.com/sophi-li/OKRs-self-learning). I'm writing an article on  my own approach and goals, stay tuned! 

##  **✅ Publish 12 blogs**
Surprisingly I have reached the target. Half of the blogs were published here on my [personal website](https://desktopofsamuel.com/blog), another half is published in new my Chinese [blog](https://notes.desktopofsamuel.com) (Migrated from Wordpress to Gatsby).  I had a lot of free time to write at home during initial wave of lockdown in March. However I have still yet to develop the habit to write, anything every day. But it's a work in progress, comparing to 6 blog published in 2019. 

Mostly read blog post is [How to Organise Design Workflow and Operation in Figma](https://desktopofsamuel.com/how-to-organise-design-workflow-and-operation-in-figma), which had 2x more visits than the second place. The article also attracted a lot of referral traffic as it was quoted on[designernews.co](http://www.designernews.co/stories/107752-how-do-you-organize-your-figma-files) and other newsletters and design resources site. Thank you so much for sharing my article. 

##  **❌ Read 12 books**
As most of my leisure time in the past year has been spent on job hunting, I failed to read 12 books in 2020,by meeting half the target at 6 only. (9 in 2019) I still haven't find a good time slot for reading, I used to read a lot during commute but the experience wasn't particularly pleasant. I shall set the same goals for my next year. 

##  **❌ Watch 20 documentaries**
It was a step up from previous year, I have watched 20 documentaries this year (11 in 2019). I think it is still a reasonable target but I might have to include documentary tv show to it as well. I attempted to write reflections after each film ([1](./documentaries-watched-2020-apr-jun-edition) & [2](./documentaries-watched-2020-jan-mar-edition)) but some time there wasn't much to write about. 

My favorite documentaries this year is [Free Solo](./documentaries-watched-2020-jan-mar-edition) (2018, Jimmy Chin, Elizabeth Chai Vasarhelyi) & [For Sama](https://letterboxd.com/film/for-sama/) (2019 Waad Al-Kateab, Edward Watts). 

{/* <Film poster={FreeSoloPoster2} title="Free Solo" year="2019" director="Jimmy Chin, Elizabeth Chai Vasarhelyi" rating="★★★★★"/>

<Film poster={ForSamaPoster} title="For Sama" year="2019" director="Waad Al-Kateab, Edward Watts" rating="★★★★★"/> */}

##  **✅ Logging my personal life & be mindful of health**
Logging is a new personal habit of 2020 that I really enjoyed doing. Although it might not be perfect, but I have created a excel system to track all my habits and personal data (like wake, sleep time, weight). I have even build a [Glide app](https://glideapps.com/r/wBB8mNsEXldm2GLDhT7m) to access the Google Sheets as a database. Glide is really powerful but the row limit and the way I want to organise my data is quite different, so in the end I input on my desktop browser anyway. 

I have also recorded 94 films on Letterboxd, 44 tv shows, 280 days of wake up time, 289 days of sleep time, 234 days of weight.  I have lost some weight as I intake less carbs, and start to be more mindful of health and what I ate. I subscribed to Calorie Mama but gave up later since matching Hong Kong dishes & recipe from the system is a chore.

##  **✅ Build new things**
I built 3 open source projects in 2020.
- [Together At Home Club](https://tgtathome.club/) — Collection of resources to encourage people staying at home during lockdown. I shared my building process and lessons [here](https://desktopofsamuel.com/takeaways-from-building-a-covid-19-curatorial-side-project). Overall accumulated users is around 3k, with around 50 curated free resources.
- [Gatsby Starter Lamma](https://gatsby-starter-lamma.netlify.app/about/) — I built this Gatsby starter in July after I realized someone forked my personal website and used as template. I never thought it would happen as the source code is so personalised and a big mess without documentation. This is an attempt for me to contribute back to the community.
- [Notes of Samuel](https://notes.desktopofsamuel.com/) — I did not maintain my old Wordpress site (Chinese blog) for a while now, so it was great to start again combing all my writings from Wordpress, Medium and even some long Facebook status. I migrated my chinese blog into Gatsby using [Gatsby Starter Lumen](https://github.com/desktopofsamuel/notes). I also built a custom [travel page](https://notes.desktopofsamuel.com/pages/travel/) featuring all my travel journals. 

For the best products & apps of 2020, I'm switching gears a bit this year and building something new. Stay tuned for my update!

That's it. I hope this annual review is going to be a tradition and I can become even more transparent on my personal growth. I'm very truly grateful for what I have learned and become over the past year, and I thank my partner, friends and family that supported me through the journey. Wish everyone safe and healthy in 2021.]]></description>
            <link>https://desktopofsamuel.com/reflecting-on-2020</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/reflecting-on-2020</guid>
            <pubDate>Fri, 08 Jan 2021 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Navigating Design Career with Design OKRs]]></title>
            <description><![CDATA[
Finding the right path in your design career can be difficult. When you don't realize the goals or don't know if you are making progress every day. OKRs (Objectives & Key Results) is a goal framework adopted by companies like Google to define and track goals. Instead of using it for company goals and business objectives, I'm using the same methodology for personal career planning, Here're my experience and reflection practicing Design OKRs for the last 8 months.

## Background
Currently working as a UI/UX consultant in Hong Kong. I have been working in the field of UI/UX and product design for the past 6 years. I will be focusing this article on progressing the design career and as well as job application process. 

I first read about OKR for self-learning, is from Sophia Li's [github page](https://github.com/sophi-li/OKRs-self-learning). I already knew about OKRs back then but it never occurred to me to use it personally. It was a hard time for me as I was on furlough in my previous company after the initial wave of COVID-19. There was not even a timeline on when I could get back to work. Reading Sophia's progress and her OKR planning was a revelation. I started to use it for planning my career, tracking my progress for job hunting.

## What is OKRs?
The definition of “OKRs” is “Objectives and Key Results. What it means, is to set goals and track the progress regularly (usually by quarters). One important thing to note, is that objectives have to be supported by **measurable key results**, usually with numbers. Career-wise, it may be difficult to find things to measure, but it's okay. Numbers do not need to be big to be succesfful, my results usually are small, like 3 people to review my portfolio, complete 2 courses. 

## Switching OKRs for Career Planning? 

![](/static/design-okr-careerplan.png)

I started with 3 questions that I want to be candid with myself:

1. What kind of skill sets and experience am I hoping to achieve and have?
2. What is my definition of success in this career?
3. What direction am I heading towards right now?

These answers have become the early objectives in my OKR. I wanted to be more experienced in the UX side of work, to prepare for job search and to engage with the design community. Therefore, my objectives for 2020 Q3 were:

- Familiar myself with analytics and user research
- Participate and contribute to design community
- Land a UX job offer

Based on these objectives, I thought of some key results that I would like to achieve that will bring me closer to the goals. Like completing the free [Google Analytics & Google Tag Manager courses](https://analytics.google.com/analytics/academy/), write 5 blog articles about tech and design, research on 10 companies that I love to work for and check their job requirements. Be mindful not to have a big task, try break it down that you can achieve within a month.

Strictly speaking, OKR advise not to write a task directly as a key result, but I think in career planning's case, the outcome could be the task as well. We can be flexible on this matter as long as these tasks can help achieve the objectives. 

## How to use Design OKR? Design OKR template for you to kickstart

I'm opening up my own [Notion](https://notion.so) OKR template for free here. You can duplicate it by clicking the top right "Duplicate" button and start your reflection right away. I have created some useful key results and objectives as a dummy.

<Button href="https://bit.ly/3v8lnmq">Try Template Now</Button>

![](/static/design-okr-objectives.png)

1. Fill in the "Objectives" table, mark the start and end date, set it as "2021 Q2", add the name of the objective. Rest of the table will populate automatically when Key Results have been filled.

![](/static/design-okr-krs.png)

2. Then, you can now fill in "Key Results" table. Select Objectives first, it will auto roll up options for choosing. Each row is for 1 key result but you create multiple key results belong to the same objective. Just like **Land a full-time UX Job** has 4 key results. **Key results are almost always defined with numbers, so you can measure the success.** You should also fill the target value. At the end of each month, you will update your progress to Month 1 / 2 / 3 columns. You may also want to log your accomplishment in the Descriptions column too.

![](/static/design-okr-views.png)

3. You can also switch between different table views. I have added some views according to time, like Current / All / Off-track etc. Timeline view will also let you to browse in a gantt chart.

![](/static/design-okr-gantt.png)


## Plan, Focus, Reflect: A loop to make progress

Just like this, work on delivering your key results every day and take an uninterrupted hour at the end of each month to reflect, plan and mark your progress in Notion. Finding a friend hosting the review session with yourself is also useful too.

For me, the target was a bit ambitious and I did not complete all the objectives and tasks that I have set at the beginning of the quarter. Frankly, only few tasks have met the target. But I am very satisfied with this framework, which allows me to set a clear direction and to review it regularly. 

I asked myself, 

> Am I making any progress to this objective?

Most of the time the answer is resounding YES. The process of breaking down objectives into concrete actions plans are very helpful. Laying out each step also means you are forcing yourself to have a plan to make it happen. 

However, if some key results that are not completed for months, don't blame yourself for being lazy or useless, a change in perspective might help you to realize the issue. Is the key result not specific enough? Can I break down the task even more? Is there any blocker that is dragging you?

For example, I have a key result to be invited to speak at design events or conference for the past year now. But in retrospective, what can I talk about even if I got invited? Should I research and write about some of the topic first? What if I research on conferences that I can submit my own topic first? What if Design OKR is the thing I should talk about? Adjust the plan accordingly and revise your Key Results for the next quarter and try again.

## OKR for Job Searching

The same philosophy of OKR applied to job searching as well. I'm extremely grateful that I received job offer during the pandemic. Being able to practice Design OKR is one of the things that I'm thankful for.

![](/static/design-okr-jobsearch.png)

The objective is very clear, **"Land a UI/UX Designer job in a design team"**.  You might noticed I added "in a design team". As I was working alone before, working & learning from more designers was my high priority too, it's nice to make it prominent and remind myself to stick to the goal. After that, I worked back on what I need to achieve in order to secure an offer. I listed the number of interviews in each stage that I expect to secure an offer. Feel free to adjust the numbers according to your expectations. 

Another objective I added aside from job application, is to **"Gather all the necessary job application materials"** (E.g. Resume, cover letter, portfolio). It took some time for me to organise assets and deliverables of past projects, so it is great to keep track separately. Bear in mind, your portfolio should be constantly evolving after each interview session. Iterations & revising a better angle to tell your design story are the secret of a successful portfolio.

Last but not least, I have also added a key result to **"Receive X feedbacks for job application materials"**. I reached out to friends, colleagues, and mentors for feedback. Even without much help, there are some useful [online portfolio review](https://www.adplist.org/) that you can attend to, or watch some of [live streams](https://www.youtube.com/watch?v=3fIgQHFQJkI). 

## To Be Continued...

If you read this far, thank you for reading!

> Habits are the compound interest of self-improvement. The same way that money multiplies through compound interest.

<cite>Atomic Habit by James Clear </cite>

This quote shares the same way I feel when I practice Design OKR. As long as I'm incrementally better than myself yesterday, no matter how small the changes I make, it could have compound effect toward a success. Now that a big objective of my Design OKR has completed, I'm still searching for my next one, could be building my own product, earning side income, or for real to speak at design events. Before that happens, let me know what you think about this approach on [Twitter](https://twitter.com/desktopofsamuel) and I would love to answer any of your questions!]]></description>
            <link>https://desktopofsamuel.com/navigating-design-career-with-design-ok-rs</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/navigating-design-career-with-design-ok-rs</guid>
            <pubDate>Tue, 09 Mar 2021 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How to sync Obsidian vault for free using Git?]]></title>
            <description><![CDATA[
Obsidian is the up-and-coming notes app that has great potential, however the platform is still in early stage, the syncing capability is still limited. Offcially, you have to pay USD4 per month for [Obsidian Sync](https://obsidian.md/sync) service and subscribe as a VIP member for mobile app early access. Or you can sync between desktopo (Windows, macOS, Linux) only. However, that does not mean we cannot access to our notes on mobile.

As Obsidian allows customizing vault save location and adopt open file format like Markdown. By using cloud sync service like Dropbox, Google Drive and iCloud Drive, whole folder can be synced and edited using any app that support Markdown, like  [iA Writer](https://ia.net/writer), [Ulysses](https://ulysses.app/), [Pretext](https://apps.apple.com/us/app/pretext/id1347707000). Two-way linking and tagging feature will not be supported. 

However, even though cloud services are easy to set up and most people probably subscribed to one already. These services were not made for tracking notes and changes. Conflict versions across devices might result in lost of data. Therefore, I'm recommending Git as an alternate solution. This tutorial will guide you to setup Git to sync Obsidian for free (without typing any command line as normal Git does).

Be aware this approach is not recommended if you have safety concern since none of the files are encrypted, therefore accessible by third-party platform.

## What is Git and How does it help?

![](git-branches-merge.png)

Git is a software for tracking and synchronizing codes for developers. Because it can compare versions between different text files, it will allow us to track any changes made to the Obsidian Vault. There is a very rare chance that your notes will be lost. Also it is also a very popular platform, most Git on desktop are free (while mobile apps require single payment only).

Note: First 3 steps of my tutorial will be creating a Github Repository. If you are already familiar with Git, please initiate a git by yourself and jump to step 4. Since this article is written for general public, I will avoid using command line tools in this tutorial.

Let's get started!

## 1. Register and Download Github for Desktop
Register an account at [Github.com](https://github.com/), we will be using Github repository to sync our Obsidian Vault. Remember to setup two-factor authentication to secure your account. Then, download and install Github for Desktop](https://desktop.github.com/). It is an app that allow us to perform most Git commands without using command line tools.

## 2. Add Obsidian Vault into Github
If you already created an Obsidian Vault, we will need to prepare the vault folders for Git. It will allow the plug-in that we'll install to sync with Github. Open Github for Desktop, click "Add an Existing Repository from your Hard Drive".

![Welcome Screen of Github for Desktop](/static/obsidian-github-desktop.png)

Then you need to select your vault location, Git will use dotfile (hidden folders) to store data under your directory. (You can see the .git folder afterwards by pressing <kbd>Cmd</kbd> + <kbd>Shift</kbd> + <kbd>.</kbd> or select to display hidden items on Windows). There will be a warning saying "The directory does not appear to be a Git repository".  Then you will need to click "Create a repository" to continue.

![Note that Git need to be saved in the parent directory of the vault, not its sub-folder](/static/obsidian-github-create-repo.png)

Then, fill in  project name and description, local path has already been filled. Rest of the questions can be ignored for now. Then click "Create Depository".

![Only name is required](/static/obsidian-github-config.png)

(You can also click "Create a New Repository" at the beginning, however, Github will create subfolder using the Name field, instead of picking the selected folder as git repo. Therefore you will need to match folder name at parent level.)

## 3. Login and Push Vault to Github

At this moment, we have only complete the git setup on the computer. Add your commit message (e.g. Initial Commit) and then click "Publish Repository" to upload the entire folder to Github. We would still need to login our Github account, click "Github.com" to login via browser.

![Select “Keep this code private” to set the repository as private instead of public.](/static/obsidian-github-login.png)

After login, click Publish again, we will need to input the Repository name in Github (same as the name is step 2). Select repository to be private (default is public) to avoid unwanted access to your notes. Then click "Publish Repository". When the "Publish Repo" text changed to "Fetch Origin", Congratulations, you have successfully upload the vault the Github! Check in your browser, you should find your repo on Github.com now. 

![Upload Success on Github](/static/obsidian-github-website.png)

##  4. Install Obsidian Git

![](/static/obsidian-preference-plugin.png)

Open Preference in your Obsidian, in Community Plugins, you will need to turn off Safe Mode before installing plugin. Since plugins can access and alter the content of your vault. You should backup before installing. Search "Obsidian Git" to install, then you will need to activate at the Community Plugins page. This plugin will directly use your git settings in the folder to sync to Github.


![](/static/obsidian-git-config.png)

After installation and activation, there will be a plugin settings for Obsidian Git. If you just want to view Obsidian content on secondary devices, I would recommend:
- Change backup interval to be 5-10 minutes to reduce app workload and increase performance
- Change Pull updates on startup to ON, it will make sure our devices have the latest update whenever the app has start up. 
- Add your device name as an identifier in the commit message template, so you can track which device has the latest update (PC vault backup: `{{date}}`)
- Last but the most important:  turn OFF Disable Push to enable pushing the commit to Github, or else it will only be available in local.

![](/static/obsidian-plugin.png)

Also in Hotkey page, I added keyboard shortcut for Obsidian Git, so I can quickly commit and retreive update.  <kbd>Cmd</kbd> + <kbd>Shift</kbd> + <kbd>+</kbd>for Commit，<kbd>Cmd</kbd> + <kbd>Shift</kbd> + <kbd>+</kbd>to pull any changes.

Now try add a note, use the keyboard shortcut or wait a while, at the bottom right corner. The plugin will indicate your commit! Then we have successfully sync to Github! 

![](/static/obsidian-github-updated.png)

## 5. Use Obsidian In Another Devices

Now, all you need is download Obsidian and [Github for Desktop](https://desktop.github.com/) on other computer, clone the depository that you have just created, and do step 1 to 4 to setup Git and Obisidian Git. Your computers will be synced automatically.

For mobile, we would need Git-support App in order to read or write the notes.
- If you just want to read, [Github official app]((https://github.com/mobile)) allows you to view all your repositories.
- If you want to read and write, [Working Copy](https://workingcopyapp.com/) would be your best choice to pull the repo and commit any new changes. It cost US19.99(HK$158) but it is only a one-time payment. In additional to that, you will also need a writing app like Pretext or iAWriter that supports Files opening with Markdown support.


## How to Solve Sync Errors in Obsidian Git?

Even if you set up sync, there might still a chance you might encounter conflict like the below screenshot. We will need to use Github for Desktop to resolve the conflict.

![Obsidian Git doesn't instruct where the errror goes, it will display clearly in Github for Desktop.](/static/obsidian-sync-error.png)

In most cases, Github will recommend you to stash the conflict files, pull changes and apply stash. See the screenshots below, first click Stash & Continue, then Pull Origin, and View Stashed after pulling, then you can restore the changes. Last, commit manually in Github and push will usually resolve the conflict.  If the conflict is within the same line, you might need to delete the incorrect version manually in Obsidian.

![Stash Changes will save your conflicts so you can recover later.](/static/obsidian-github-stash.png)

## Conclusion

Currently, I'm still in an exploratory stage using Obsidian. Making notes sync is just the first step, but I feel Obsidian has great potentials. It is not an replacement for Evernote or Notion but something better. 

Community plugins also is a big part of the ecosystem that allows customisation and enhance productivity. Like [Day Planner](https://github.com/lynchjames/obsidian-day-planner) can combine Markdown with Calendar, serving as a personal daily journal. I would love to share more about my experience with Obsidian, feel free to ask if you have any questions on Twitter.
]]></description>
            <link>https://desktopofsamuel.com/how-to-sync-obsidian-vault-for-free-using-git</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/how-to-sync-obsidian-vault-for-free-using-git</guid>
            <pubDate>Fri, 30 Apr 2021 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Documentaries watched, 2021 Jan - May Edition]]></title>
            <description><![CDATA[{/*
import Film from "components/Film";
import MinimalistPoster from "./minimalist.jpg";
import KeeprollingPoster from "./keeprolling.jpg";
import OctopusPoster from "./octopus.jpg";
import KingmakerPoster from "./kingmaker.jpg";
import StrayPoster from "./stray.jpg"
*/}

{/* <Film poster={MinimalistPoster} title="The Minimalists: Less Is Now" year="2021" director="Matt D’Avella" rating="½"/> */}

## The Minimalists: Less Is Now

Following Joshua Fields Millburn and Ryan Nicodemus (AGAIN), filmmaker / youtuber Matt D'Avella (re)directed the EXACT SAME STORE with similar personal testimonials on practicing minimalism. 

I was wondering if Netflix has played the old film the whole time. As another review said, "Would be more minimalist to just have the one previous documentary".

This is the lowest rating I have given to any film.

{/* <Film poster={KeeprollingPoster} title="Keep Rolling" year="2020" director="Man Lim-Chung" rating="★★★★"/> */}

## Keep Rolling

The traditional Hong Kong Cinema has always been masculine with gangsters, police, kung fu, or a mix of all. That's why Ann Hui's work is unique and I think she is the most respectable auteur in Hong Kong cinema. Fullstop. 

At the age of 73, she is still making films and have publicity tour around China, as the documentary captured. Her passion for films, working tirelessly clearly matched with the film title "Keep Rolling". Even though her work was not well-received by the mass market every time, her style in social criticsm, being a women filmmaker, and at the same time still down-to-earth as a local housewife (師奶) has encourage me to follow her filmography after watching Keep Rolling.

{/* <Film poster={OctopusPoster} title="My Octopus Teacher" year="2020" director="Philippa Ehrlich, James Reed" rating="★★"/> */}

## My Octopus Teacher

Even though "My Octopus Teacher" has won Academy Award for Best Documentary Feature, I'm troubled by the film's narration and how the documentary framed the octopus as the savior of Mr. Foster's life. It shouldn't. 

The film is rather plain, not a single soul other than Mr. Foster were interviewed in the film, which made me wonder about his credibility (as he is a filmmaker not a marine biologist). Even from layman or hobbiest perspective, I would really appreciate the voices of the others feeling about the octopus. Maybe that's why it's "My" Octopus Teacher, not anyone else, not even his son as he was not audible in the film. As The Guardian's review also mentioned there might be a projection of his enthusiasim on the octopus.

Also, may I also point out he acknowledged in the beginning of the film that he was not a good father and then he spent more time with an octopus instead of his son? And magically at the end of the film, his son conveniently appears and dives with him and have a happy ending.

## The Kingmaker

{/* <Film poster={KingmakerPoster} title="The Kingmaker" year="2019" director="Lauren Greenfield" rating="★★★★½"/> */}

I'm amazed by the filmmakers being able to gain access & trust straight to the corridor of power of The Philippines. Starting with the interview of Imelda Marcos at her palace-like residence, the film introduced her as an exiled royalty, who hope to restore the status of her dead husband president. But as the film goes, it peels back layers and uncover more truth about political history of The Philippines and she was staging a comeback.


{/* <Film poster={StrayPoster} title="Stray" year="2021" director="Elizabeth Lo" rating="★★★½"/> */}

## Stray

The cinematography of Stray beautifully captures the cityscape of Istanbul from the point of view of stray dogs. Working with a minimal set of crew, the director explained in Q&A, that she used handheld stabilized camera shootingfrom a low angle point of view while her local producer recorded the sound of the environment. 

The approach of direct cinema, with more than 500 hours of footage captured (aacc to the director) paid off in presenting the political & social turmoil in Turkey, not to mention most of the subjects are refugees from Syria or Turkmenistan. Dispite their hardship living on the street, these stray dogs are still being taken care of, fed by strangers and slept on carpet. 

However, using Greek philosophers' quote to cut scenes is a confusing creative decision for me. I felt only the last Orhan Pamuk's quote or the history of banishing stray dogs in 1911 (as director mentioned in Q&A) is more relevant to the narration.]]></description>
            <link>https://desktopofsamuel.com/documentaries-watched-2021-jan-may-edition</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/documentaries-watched-2021-jan-may-edition</guid>
            <pubDate>Tue, 11 May 2021 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Tidying up Email Inbox for 2022]]></title>
            <description><![CDATA[
It's a new year, let's spend some time to declutter. I have been going through my inbox during holidays. In 2021 June, Google started to count any new photos toward the 15GB Google Account storage. 6 months later, I finally received the alert saying my account is running out of space.

First, head to [Google One](https://one.google.com/storage), you can see which Google service occupy most of storage space. In fact, my Gmail occupied more storage (8GB) than my Google Drive (4GB) did. This probably because I haven't delete any of my emails since I since 2005. Therefore, I'm sharing some tips to identify emails that are occupying most of your storage!

Now, I have deleted more than 2GBs of email in the end and I save few more months of money before subscribing Google One. Let's call that a win.

![My Google One Account after clean up](/static/gmail-inbox-1.png)

Using Gmail search operators is available on both desktop browser or mobile app, just simply start typing in the search fields in Gmail. Let’s get started.

## 1. Find space-consuming emails

![Text Query in Gmail Search Box is great to filter anything](/static/gmail-inbox-2.png)

Let's start with the largest emails first, did you know you can use a simple text query to filter your email? Aside from typical `from:someone@gmail.com` or `to:someone@gmail.com`, there are queries specific to mail attachments. Try `has:attachment` to find all emails that contain attachements and you can also use `larger:10M` (10M means 10MB) to pinpoint attachments that are too big.

I have got rid most of my emails that contains attachments that is larger than 10MB, but you can also try with different file sizes depends on your need (1M or 2M or 5M). If you have a specific time range that want to avoid, `before:2016/01/01` would also be very useful to filter out emails before a certain date. You can mix and match multiple queries by simply adding space in between.

## 2. Delete Mails that You Never Read

Use `is:unread`to find mails, newsletters or notifications that you never read. I used this in combination with `before:2016/01/01`and `from:someone@gmail.com`to delete all series of email coming from the same sender. Especially if you didnt turn off notification emails from social media sites, like Twitter or Facebook, the accumulated emails that you have received might shock you.

## 3. Some Mail Categories Probably Does Not Matter

Promotional emails probably does not matter after a few years, why not delete all of them? You can simply use `category:promotions`or `forums` or `social` or `forums` to filter different types emails. Be aware this automated categorisation, which Google called Tabbed Inbox was introduced in 2013. So it doesn’t apply to all the emails before 2013.

That’s it. Share your tips if you have any secret queries that I missed!

]]></description>
            <link>https://desktopofsamuel.com/tidying-up-email-inbox-for-2022</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/tidying-up-email-inbox-for-2022</guid>
            <pubDate>Mon, 10 Jan 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How Might We - Gatsby Starter Obsidian Garden]]></title>
            <description><![CDATA[
Hello JUXT friends,

It’s a short month in February but it was quite productive for me. This month, I moved to explore the world of Tailwind CSS. Utility-first approach of Tailwind is quite interesting after trying out different styling solutions. I had also applied my learning immediately to my latest project.

I had the idea last year to convert part of the website into digital garden and I finally did it! There’s a sidebar in the Guides with a list of my quick note. Most of the code I re-used for a brand new starter in Gatsby, so every Obsidian user can publish their own Obsidian library as a website.

### ✨ LAUNCHING: Gatsby Starter Obsidian Garden✨

Obsidian currently offers Publish services ($20/month) with advance features. This starter is a free alternative for Obsidian users who want to publish their digital garden as a website. Obsidian can also serve as an on-device CMS to manage your content.
➡️ Check It Out
Best,
Samuel


## Read my Twitter thread

https://twitter.com/juxtdesigncc/status/1497538906606080003

## Thoughts and Ideas

[Building Gatsby Starter for Digital Garden](https://juxtdesign.cc/guides/building-gatsby-starter-for-digital-garden/)
Skip to bottom if you are already using Obsidian You cannot connect the dots by looking forward. You can only connect them by looking…

[Punycode](https://juxtdesign.cc/guides/Punycode/)
Background Messing with RSS feed recently (as NextJS do not have any official RSS parser plugin) , I realised Chinese URL links generated…

[How Might We](https://juxtdesign.cc/guides/How%20Might%20We/)
How Might We Summary: Framework to ask the right questions to generate new & good ideas Nielson Normal Tips: Avoid Suggesting a Solution…
juxtdesign.cc

## Resources hunted

[Roboto Serif](https://juxtdesign.cc/resources/roboto-serif/)
New serif typeface under Google’s Roboto font family. It also includes a special variable font option to optimize display base on optical size axes.

[Jitter Video](https://juxtdesign.cc/resources/jitter-video/)
Jitter is a Figma plug-in allows you to export your mockup and create micro-animation! Great for Dribbble shots or creating any promotion materials.

[Figma Tokens](https://juxtdesign.cc/resources/figma-tokens/)
Figma Tokens is a Figma plug-in allows you to generate, switch and apply theme through JSON.
]]></description>
            <link>https://desktopofsamuel.com/how-might-we-gatsby-starter-obsidian-garden</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/how-might-we-gatsby-starter-obsidian-garden</guid>
            <pubDate>Mon, 28 Feb 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How Might We]]></title>
            <description><![CDATA[
Hello JUXT friends,

Welcome to the first issue of How Might We! Here I will be sharing more behind the scene & reflection while working on JUXT Design.

## Learn, Share & Advocate
First month of 2022, I have been busy learning and working on JUXT Design’s new website. I finished a NextJS course last month, which has finally encouraged me to experiment it with one of my website. It’s way faster, less opinionated yet more development effort for hobbyist like me.

I have also made new plans for JUXT Design this year, new content are being created! Notice the new domain? The website was also rewritten from scratch using the latest tech stack! I’m also switching to Revue for newsletter service. I’ll be sharing monthly on my recent work
Looking forward to share them with you,

Best,
Samuel

## Articles Written

[Why should you create a website](https://juxtdesign.cc/guides/why-should-you-create-a-website/)
Have you been relying on social media to promote your content? How did you cope with the uprising of new platforms?

[Design Better Search Box and Make Search Journey More User Friendly?](https://juxtdesign.cc/guides/design-better-search-box-and-make-search-journey-more-user-friendly/)
Recently, I worked on a concept design for a Electric Vehicle Charging Map App. Here’s a recap of my thinking process

[Create Sparkline Charts Without Any Code Using Sparks](https://juxtdesign.cc/guides/create-sparkline-charts-without-any-code-using-sparks/)
Sparkline is a tiny chart to visualise trends of a series of data values. After The Flood created Sparks font to generate sparkline chart using a line of text


## Resources Hunted

[Track Awesome Design Systems (klaufel/awesome-design-systems) Updates Daily | Track Awesome List](https://www.trackawesomelist.com/klaufel/awesome-design-systems/)
A curated list of bookmarks, resources and articles about design systems focused on developers.

[Fluid Space Calculator](https://utopia.fyi/space/calculator/)
Fluid responsive design

[Staff Design](https://staff.design/resources)
Tips and resources to help product designers level up.


]]></description>
            <link>https://desktopofsamuel.com/how-might-we</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/how-might-we</guid>
            <pubDate>Mon, 28 Feb 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[2021 and more...]]></title>
            <description><![CDATA[
Sorry for the delay, probably this will be the LAST year review you will ever read this year, which arrives right before the first quarter has ended. Reflecting on 2021, there’s steady progress on personal and career development.

## ❌ Read 12 books

I completed 9 books this year (↑3 comparing to 2020) yet I still failed to meet 12 books' target. One book I really enjoyed is Project Hail Mary, written by Andy Weir. Continuing after the success of The Martian, Project Hail Mary is a fascinating interstellar journey that reminds so much of "Arrival". I remember I physically could not stop reading until I've finished for 3/4 days.

## ✅ Publish 12 blogs

I published 14 blogs (↑1 comparing to 2020) last year, more than a half of them were Chinese published in my Chinese blog. But the most viewed one is [How to sync Obsidian vault for free using Git](https://desktopofsamuel.com/how-to-sync-obsidian-vault-for-free-using-git/). I could see the article sits at the top search results in Obsidian-related keywords. My personal favorite is actually Design OKR, as I shared my own career reflection and management framework, more on this alter.

## ❌ Watch 20 documentaries

I watched 12 documentaries (No change comparing to 2020). My Favourite documentary this year is **Mayor** by David Osit. It captured the fascinating of job of Musa Hadid, mayor of Palestinian city Ramallah, which was described a city without country.

{/* // <Film poster={MayorPoster} title="Mayor" year="2019" director="David Osit" rating="★★★★★"/> */}

## ✅ Build new things

This year I tried to build a variety of stuff:

![](./notes-screen.png)


- **Music, Films & Books I’m enjoying**: Integrating with Spotify API, [Letterboxd](https://letterboxd.com/samuelisme/) feed as well as my reading record from [Oku](https://oku.club/user/desktopofsamuel/collection/reading). I started using `gatsby-source-spotify` & `gatsby-source-rss` that update per build time, but as I migrated [my chinese blog](https://notes.desktopofsamuel.com) to NextJS few months ago, the current version will sync automatically using SWR.


- [**Design OKR Template:**](/navigating-design-career-with-design-okrs/) I love sharing my career planning progress and thought behind, Design OKR was my first attempt, creating a framework for reflection and planning that I adopted for the past years. I have also shared my [notion template online]([https://desktopofsamuel.gumroad.com/l/pftUQ](https://desktopofsamuel.gumroad.com/l/pftUQ))
- [**UX Design Career Kit**](/ux-design-career-kit/): Using Airtable, I started collecting useful career and job search resources and links, making it a free career kit.

![](./keystroke.png)

- [**Keystroke on Figma**](https://www.figma.com/community/file/979571292056443766) : Created a Figma community template to create a auto-layout keyboard keycap easily on Figma & FigJam.

## ✅ Film Photography

![Everything is going to be OK.](https://res.craft.do/user/full/803ab94f-c9c2-822c-52ed-9748e8a54d7c/doc/CACDBCE5-A504-40B8-B053-6A2712FE715C/0263005B-AF10-4978-81B8-0E225FE7A77B_2/7bgZ4xFQSoXJb5AJe943aG3uj8NnJ86RlPwYnnn3xjsz/000033000007.jpeg)

Film photography was a new hobby for me in 2021. Used some disposable film camera before, but this is first time operating a “real” one. Finding my father’s old Nikon FM film camera at home (comes with a prime 35mm, 50mm, even a zoom lens), took me nearly 2 months back and forth in SSP to fix and another month to finish the first roll, but it’s still working! Hopefully after lockdown, I will be able to go out more and share some more photos.

## ✅ Keep Up with Monthly Reflection

I love writing my monthly reflection, as well as reading them back after a while. Even though I change the format quite often. I often considered monthly reflections as the summary of my month. Most questions are around highlights of the month, new things launched / shipped that month or things that I should achieve this month.

Goodbye 2021, Hello 2022

]]></description>
            <link>https://desktopofsamuel.com/2021-and-more</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/2021-and-more</guid>
            <pubDate>Thu, 10 Mar 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How Might We - Building Design Community in Hong Kong]]></title>
            <description><![CDATA[
Hello JUXT friends,

It’s the end of the Q1 of 2022. Hope you have reserve some time to reflect on your progress so far. I treasure my blocked hour that I will spend on writing my own reflection. This month, I have joined [Friends of Figma, Hong Kong](https://friends.figma.com/hong-kong/) as one of the community moderator, we organized our first kick-off event this month and it’s so great to meet new friends and contribute to the design community.

Between blog, digital garden and [my resources bookmarks](https://juxtdesign.cc/resources/), I found it took quite a lot of time to maintain all 3 content pillars while keeping up with social media at the same time. Just wondering, how do you balance content and promotion when building a personal brand?

Best,
Samuel

## Thoughts and Ideas

I started a new collection called “Made in Hong Kong” this month, hoping to highlight some UX and design resources that are made in Hong Kong. Like my own Figma template “Keystroke”! Let me know if you know any resources!


[Best Made in Hong Kong Design Resources in 2022](https://juxtdesign.cc/tags/hong-kong/)
One stop guide and resources for product design, UI/UX design.

## Resources hunted

[Apple Accessibility](https://juxtdesign.cc/resources/apple-accessibility/)
Redesigned Accessibility page by Apple. Discover accessibility features and how to design better UX with accessibility in mind.

[Kumincho by Kowloon Type](https://juxtdesign.cc/resources/kumincho-by-kowloon-type/)
Traditional Chinese serif font created by Kowloon Type is released after crowd-funded over $700k USD in Taiwan & Hong Kong in 2021. USD$320.

[Photo Booth](https://juxtdesign.cc/resources/photo-booth/)
A FigJam plugin that let collaborators / participants to take a photo from a skeuomorphic Polariod. Great for ice-breaking session.

[Font Fashion Week](https://juxtdesign.cc/resources/font-fashion-week/)
International type design online events organised by I Love Typography
]]></description>
            <link>https://desktopofsamuel.com/how-might-we-building-design-community-in-hong-kong</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/how-might-we-building-design-community-in-hong-kong</guid>
            <pubDate>Thu, 31 Mar 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How Might We - Building Design Community in Hong Kong]]></title>
            <description><![CDATA[

Hello JUXT friends,

It’s been a while and I want to share what kept me so busy over the past few months.

As mentioned in my previous issue, I have become a community moderator for [Friends of Figma, Hong Kong](https://friends.figma.com/hong-kong/) and I have shifted my focus in running the community instead of contributing content to JUXT Design, which is a great thing as one of my key objectives was to involve in the design community in Hong Kong.

We are now active on [Discord with 200+ members](https://discord.com/invite/GAsmtRps6G) now after 2 months! We have already organised community events and workshops online. Our first [real-person event](https://friends.figma.com/events/details/figma-hong-kong-presents-fof-hk-summer-party/) is coming up on Jun 30, join us and let’s meet each other!


May is also a big month for Figma as big features dropped during the [Figma’s annual conference](https://config.figma.com/events/figma-config-2022/agenda) (all sessions are free to rewatch now), such as dark mode, component props and enhanced Auto Layout. These are very exciting news as Figma users and We have also hosting watching and rewatching party for design talks during the conference!

I’ve also written a [Medium article](https://medium.com/friends-of-figma-hong-kong/10%E5%80%8B%E4%BD%BF%E7%94%A8-figma-%E5%BF%83%E5%BE%97-%E8%AE%93%E4%BD%A0%E7%9A%84%E8%A8%AD%E8%A8%88%E4%BA%8B%E5%8D%8A%E5%8A%9F%E5%80%8D-9eba59bafca6) last month about 10 Figma Tips to make your design process efficient.


Hopefully I will announce some more good news next month. Let’s stay in touch!

Best,
Samuel

## Resources hunted
There are so many talks to catch up from WWDC and Config. Here’s some of my favorite right now, will be sharing more over the next month!

[Writing for Interfaces](https://juxtdesign.cc/resources/writing-for-interfaces/)
create clear, conversational, and helpful writing and provide tips for interfaces copy

[Design Systems Are Flawed](https://juxtdesign.cc/resources/design-systems-are-flawed/)
Designer José Torre shared his lessons on building Shopify’s design system - Polaris

[Config 2022](https://juxtdesign.cc/resources/config-2022/)
Figma annual conference CONFIG is back! Stay tuned for product announcement on May 10 opening keynote.
]]></description>
            <link>https://desktopofsamuel.com/how-might-we-building-design-community-in-hong-kong</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/how-might-we-building-design-community-in-hong-kong</guid>
            <pubDate>Mon, 20 Jun 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Sharing Some Love for Indie Mac Apps]]></title>
            <description><![CDATA[
For years, I have been using Mac for work and PC for leisure (refer to my [PC setup](/a-journey-of-computer-setup/) article) since my PC setup has better graphic performance for games and multi-media production. Not being able to use Mac 24 / 7, means I probably missed out so many great indie apps in Mac ecosystem. Here's some of my recent discovery of Mac Apps with my setup


## Divvy - Windows Management
![Screenshot of Divvy, Mac windows management app](/static/divvy-screenshot.jpg)
Divvy is one of my earliest macOS app that I have used. macOS's windows management apps are There is no competition in windows management arena between  and windows. While I miss Windows snap to half feature, there are TONS of windows management apps on macOS with that is fun to use

Divvy is an intuitive and customizable one. Without the need to memorize different keystrokes for each window size and position, I just remember one to open Divv,  <kbd>Cmd</kbd>+<kbd>` </kbd> (A custom global shortcut that I set). It will open a small window that allows you assign window to a proportionate size of the screen.

Download: https://mizage.com/divvy/ ($13.99 with free trial)

## Vanilla - Hide Menu Bar Icons
![Screenshot of Vanilla, able to hide excessive menu bar icons](https://matthewpalmer.net/vanilla/0-lowres.jpg)
Menu Bar apps are all about productivity which could be a separate topic to talk about. Vanilla is a good free alternative to hide your unnecessary menu bar icons, free version requires

Download: https://matthewpalmer.net/vanilla/ (Free with Pro version at $10)

## Itsycal - Free Menu Bar Calendar
![Screenshot of Itsyal, Menu Bar Calendar with event integration](/static/itsycalbanner2@2x.png)

Before I had [Day-0](https://shauninman.com/archive/2020/04/08/day_o_mac_menu_bar_clock_for_catalina) replacing my default date & time on Menu Bar so it can show a mini calendar. Now, I switched to Itsycal since it offers more functionality with iCloud Calendar supports. Basically it's a stripped down version of Fantastical, it even support direct meeting links for Zoom, Google Meet, and Microsoft Teams.

Download: https://www.mowglii.com/itsycal/ (Free, support Apple Silicon)

## Rocket - Quick Emoji Input
![Screenshot of Rocket, a quick emoji input app with full keyboard support](/static/rocket-screenshot.jpg)
Although Mac has built-in emoji input keyboard (through Keyboard input menu in Menu bar), wouldn't it be easier if it can support Slack style input, typing a pre-fix of `:` to start searching for an emoji. Developed by [Matthew Palmer](https://matthewpalmer.net)

Download: https://matthewpalmer.net/rocket/ (Free with Pro version at $10 )

## Umbra - Dark Mode Wallpaper App
![Screenshot of Umbra, able to auto switch wallpaper when enter dark mode](/static/umbra-screenshot.jpg)
My very recent discovery is Umbra by Replay Software. Even though macOS Big Sur has added Dark Mode support and dynamic wallpapers. Very limited options are available right now, since it require complicated process to create it by yourself like [Dynamic Wallpaper Club](https://dynamicwallpaper.club/gallery). Umbra is way more simple, with two wallpapers set for light and dark mode. It also support Unsplash, pretty much you can find anything already.

Download: [https://umbra.replay.software](https://umbra.replay.software)]]></description>
            <link>https://desktopofsamuel.com/sharing-some-love-for-indie-mac-apps</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/sharing-some-love-for-indie-mac-apps</guid>
            <pubDate>Sat, 03 Jul 2021 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Design Talks 2022]]></title>
            <description><![CDATA[
Design talks are hidden gems for designers to quickly learn from other teams' successes and failures! No matter you are a beginner in UX or currently in the field, check out these recent design talks that I really enjoyed watching and found them greatly related to my everyday’s work.

## UX in China

![UX in China by Yuan Qing at Config 2022](/static/ux-in-china.png)

Yuan Qing from Shopify shared his observations and analysis on UX design in China.  His sharing is particularly useful in places like Hong Kong, where bilingual design (Chinese and English) is ubiquitous. He analysed why Chinese-reading users prefer densed information, due to both Chinese language as well as the culture, justifying crowded design is not ill design but well justified.

[Watch UX in China - Yuan Qing (Config 2022)](https://www.youtube.com/watch?v=ohxyxGR9tsA)

## Writing for interfaces

![Writing for interfaces by Apple at WWDC 2022](/static/writing-for-interfaces.png)

Beautifully written as an introduction, Interface writing is to **design through the lens of language.** Writer team from Apple shared their own framework in writing for interfaces. The most helpful tip is to be conversational in interfaces and read the copy out loud. They mentioned the importance to include writers as a early as possible.

> The earlier you make writing a part of the process of designing your app, the better the experience will be for the people who use it.

[Watch Writing for interfaces - Apple (WWDC 2022)](https://developer.apple.com/videos/play/wwdc2022/10037/)

## Design System Are Flawed

![Design System Are Flawed by Jose Torre at Config 2022](/static/design-systems-are-flawed.png)

Another great talk from Shopify team, José Torre narrated his design journey with great analogy and humour. I always thought designing for designer is the most challenging job as you’re designing for yourself to use. But one great point that Jose pointed is that design system will not replace designers’ job.

> You can't expect the design system to do the job of a designer.

> Design system is just a tool.

Allowing designer to contribute as a part of the process instead delivering it top-down is also important.

[Watch Design systems are flawed by José Torre (Config 2022)](https://www.youtube.com/watch?v=tWXowpigqi0)

## Design accessibility for individuals with Material Design

![Design accessibility for individuals with Material Design](/static/material-design-talk-accessibility.png)

User research is always a luxury that most companies prefer to spent on topics that bring in revenue. Therefore it’s great that Google are sharing their research findings. First part of the talk explained how they structured their  color system based on tonality to ensure sufficient colour contrast even in highly customisable environment, like the Material You system.

They also shared their research on “Should 3:1 colour contrast always be required” when creating non-textual components. Their findings have thus support their revamp on Switches which is now more accessible as well as customisable.

[Watch Design accessibility for individuals with Material Design by Google (Google IO 2022) ](https://www.youtube.com/watch?v=b6FTDYrJWRA)

## The hardest part about building dark mode is that people think it’s easy 

![The hardest part about building dark mode is that people think it’s easy by Figma](/static/dark-mode-talk.png)

Following up on the topic of colour, with the introduction of dark mode, more and more websites and apps are supporting multiple colour themes. But it is not as easy as creating a opposite colour scale (especially for colours applied in inactive & disabled states). The whole color tokens system may require revamp as it it adds a new dimension to all the colours currently used.

[Watch The hardest part about building dark mode is that people think it’s easy by Figma team - Config 2022)](https://www.youtube.com/watch?v=1DTnojio89Y)

That’s it! Share your favourite CONFIG, WWDC and Google IO talks with me if I missed any.

]]></description>
            <link>https://desktopofsamuel.com/design-talks-2022</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/design-talks-2022</guid>
            <pubDate>Sun, 24 Jul 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How Might We - Life Update]]></title>
            <description><![CDATA[
Hello friends,

So here it goes, I started a new role as a product designer this month in a crypto company. Before starting a new role, I’m so grateful that I am able to take some time off, spent with family and friends. 

Never underestimate the power of a break, it helps you to reset, reflect and avoid career burnout in longer run. Having a break between 2 jobs are the best because the old company does not require your attentions anymore while you have not started in the new one, It’s just perfect for me. Therefore my takeaway is always negotiate your onboarding date, if the company really wants you to join, probably they can wait.

On the community side of things, July is freaking busy! Shortly after FoF Summer Party, UX Pear (another local UX community) also organised a in person event. This month I also hosted Designspiration, topic is the mighty [Portfolio and Personal Website](https://medium.com/friends-of-figma-hong-kong/tips-on-building-your-ux-design-portfolio-ed9ed159b18c)! There’s also a new experiment called “Side Project Saturday”, where we got to tour Goodnotes office (call out to the espresso machines on the right!) and work on our side project. 
Best,
Samuel

## Thoughts and ideas

This month I published one new blog article about the design talks that I really enjoy watching over the past few months!

[Design Talks 2022](https://desktopofsamuel.com/design-talks-2022/)
Sharing my bookmarked design talks for 2022

## Resources hunted

[Prison Gothic](https://juxtdesign.cc/resources/prison-gothic/)
Support this new Hong Kong typeface crowdfunding project! Prison Gothic is a digitalised and extended font according to handcrafted road sign typeface by prisoners starting in 1970s in Hong Kong. USD$121

[Dela Gothic One](https://juxtdesign.cc/resources/dela-gothic-one/)
Dela Gothic One is a Japanese typeface that has very complete Chinese character set. Best of all it’s available on Google Fonts, meaning you can use it on Figma and anywhere as well for free in any usage.

[Fontshare](https://juxtdesign.cc/resources/fontshare/)
Fontshare is a free font sharing platform that is 100% free for personal and commercial use.

[Propstar](https://juxtdesign.cc/resources/propstar/)
Propstar is super helpful when designing components to accommodate all possible options for variations and component properties.
]]></description>
            <link>https://desktopofsamuel.com/how-might-we-life-update</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/how-might-we-life-update</guid>
            <pubDate>Thu, 11 Aug 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How Might We - Summer Blues]]></title>
            <description><![CDATA[
Hi Friends,

Thank you for those who joined “Do You Know Design Systems” early this month. It’s been a privilege to organise and host in-person event for the community. The night was enlightening covering all about design system. I have also added the deck as a resource below if you missed the event.

This month the biggest news in the design community probably was Adobe will be acquiring Figma. Even though everyone worried about Figma’s future, and Figma claimed to be autonomous and there’s isn’t a roadmap to integrate with Creative Cloud. But only time will tell if this acquisition is a good thing or not.

Samuel

## Thoughts and ideas

[Do You Know Design Systems](https://juxtdesign.cc/resources/do-you-know-design-systems/)
Slides from “Do You Know Design Systems - AMA with HK Design System Experts”, organised by Friends of Figma, Hong Kong

## Resources hunted

[Supa Gradient](https://juxtdesign.cc/resources/supa-gradient/)
Supa Gradient plugin allows you to create and manage gradients

[Themer](https://juxtdesign.cc/resources/themer/)
Themer allows you to create and switch themes from your published style library. Applying to color, shadow and text styles.

[Benchmarking Your Design System](https://juxtdesign.cc/resources/benchmarking-your-design-system/)
Free e-book by Invision to help you to evaluate and evolve your design system

[Design System Structure Guides](https://juxtdesign.cc/resources/design-system-structure/)
Design system structure guide help you to pick the right file hierarchy according to your figma plan! Analyzed the complexity, pros and cons for each options too! Super useful
]]></description>
            <link>https://desktopofsamuel.com/how-might-we-summer-blues</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/how-might-we-summer-blues</guid>
            <pubDate>Wed, 28 Sep 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Best of 2022]]></title>
            <description><![CDATA[
Finally settling down for year review. Here're my best apps, products and films in 2022!

# Apps

## [Arc Browser](https://arc.net/) by Browser Company

Switching to Arc from Firefox in 2022 is the most delightful experience I've onboard. It has done a lot of rights as a new browser. Challenged existing browsers' mental modal with Profiles & Spaces. While Profiles handle our online identity (who are we browsing as), Spaces take care of our use case (what websites are we browsing together). It was steep learning curve that I took me awhile to understand and get used to. Aside from usability, it still lacks core features (e.g. cross-platform support, multi-device sync) in order to convert more early adopters to become a daily driver..

## [Readwise Reader](https://read.readwise.io/) by Readwise

Fell in love right after launching and I have reactivated my trial. Readwise Reader’s keyboard shortcuts are top-notched. Able to read RSS and eBooks is great strategy that justify its pricing & pushes away from the read-it-later category. (Especially Apple Books is suck now after new iOS update). But still looking forward how it integrate with the Readwise and how it preach their philosophy of using, the old Readwise app design and features in comparison is embarrassing now.

## [Raycast](https://www.raycast.com/)

Switched to Ray-cast from Alfred. Raycast is so feature-packed, versatile, and open. App categories I could replace: Stickies, Pasteboard Management, Windows Management). Follow this [24-day thread](https://twitter.com/raycastapp/status/1605981287868534784) to learn all about Raycast. Did I mention they also made a wonderful yearly recap this year! (Type Raycase Unwrap 2022)

![Recap of Raycast 2022](/static/raycast-2022.png)

## [Notion](https://www.notion.so/)

2022 is a breakthrough year for Notion. Not only did they ship tons of quality-of-life features, that make the product easier to use, but they also acquired services I've been using, including [Cron](https://cron.com/) (iOS app has just released) and and [Automate.io](http://Automate.io) (which has shut down). Looking forward how the company plans for 2023. Core problem that I've experienced, is I tend to spent time architecting the system instead of using the system and it is still lack of a universal calendar, task and tagging system.

## [Input Source Pro](https://inputsource.pro/)

As a multilingual person, I switch input method on my mac dozen to hundred times a day. Any productivity enhancement would increase my productivity drastically. Aside from changing the default shortcut from Cmd + Space to Caps lock, I also bind default input method per app, which is super useful as I only type Chinese in particular apps only, but it always a hassle to switch input method back and forth

---

# Products

## Airpod 3

Airpod have been a game changing experience for me in daily use. Blutooth connection is instant and multi-device handling is so integrate. It actively aware of my usage to determine whether I need to connect with the headphone. I'm confident to say I'm not using other headphone brands as long as I'm sticking with Apple devices.

## Sensibo Pro

My smart home stack has added AC control this year. Sensibo Pro provides a foolproof solution for urban apartment which does not have integrated thermostat. It simply replace AC remote control to send out inferred signals. Pairing is easy, it works with any AC that has a remote control. Simply face the sensor to the remote and click Power button, it will automatically match with the right command. After integrating to smart home platform, remote turn on or even time / temperature triggered power on and off is very simple.

## Mission Battery Base

After setting up my first Homepod Mini, it’s so limiting when you cannot carry it around with you (like to the kitchen or balcony), purchasing one for each room is a stupid and expensive plan. Mission Battery Base offers a elegant mobile solution, battery last up to 1 day (especially it runs as the home hub).

---

## Films

![Best of 2022 Stats on Letterboxd](/static/best-of-2022-films.png)

This year I have watched 53 films in total. My stat for 2022 can be viewed on [Letterboxd](https://letterboxd.com/samuelisme/year/2022/).

My top 10 films I have first watched in 2022:
1. [Everything, Everywhere All at Once (2022), Directed by Daniel Scheinert, Daniel Kwan](https://letterboxd.com/film/everything-everywhere-all-at-once/)
2. [Utama (2022), Directed by Alejandro Loayza Grisi](https://letterboxd.com/film/utama/)
3. [Coco (2017), Directed by Lee Unkrich](https://letterboxd.com/film/coco-2017/)
4. [Batman (2022), Directed by Matt Reeves](https://letterboxd.com/film/the-batman/)
5. [Decision to Leave (2022), Directed by Park Chan-wook](https://letterboxd.com/film/decision-to-leave/)
6. [The Good Boss (2021), Directed by Fernando León de Aranoa](https://letterboxd.com/film/the-good-boss/)
7. [The Sparring Partner 正義迴廊 (2022), Directed by Ho Cheuk-tin](https://letterboxd.com/film/the-sparring-partner/)
8. [Athena (2022), Directed by Romain Gavras](https://letterboxd.com/film/athena-2022-1/)
9. [Drive My Car (2022), Directed by Ryusuke Hamaguchi](https://letterboxd.com/film/drive-my-car/)
10. [Glass Onion: A Knives Out Mystery (2022), Directed by Rian Johnson](https://letterboxd.com/film/glass-onion-a-knives-out-mystery/)]]></description>
            <link>https://desktopofsamuel.com/best-of-2022</link>
            <guid isPermaLink="true">https://desktopofsamuel.com/best-of-2022</guid>
            <pubDate>Sun, 08 Jan 2023 00:00:00 GMT</pubDate>
        </item>
    </channel>
</rss>